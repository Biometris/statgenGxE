[{"path":"/articles/statgenGxE.html","id":"the-statgengxe-package","dir":"Articles","previous_headings":"","what":"The statgenGxE package","title":"Genotype by Environment analysis using statgenGxE","text":"statgenGxE package developed easy--use package Genotype Environment (GxE) analysis data plant breeding experiments many options plotting reporting results analyses. vignette describes perform different types analysis available package. availability functions package based analyses described Malosetti, Ribaut, van Eeuwijk (2013). suggested reading van Eeuwijk, Bustos-Korts, Malosetti (2016). following types analysis can done using statgenGxE: Mixed model analysis GxE table means Finlay-Wilkinson Analysis AMMI Analysis GGE Analysis Identifying mega environments Stability measures Modeling heterogeneity genetic variances correlations analyses pdf report can created automatically, see Reporting. Note due technical restrictions number significant digits printed tables throughout vignette always optimal. practice precision output can always specified user.","code":""},{"path":"/articles/statgenGxE.html","id":"dp","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Genotype by Environment analysis using statgenGxE","text":"use package demonstrated using maize data European Union project DROPS (https://cordis.europa.eu/project/id/244374). data available https://doi.org/10.15454/IASSTN (Millet et al. 2019) relevant data set included data.frame statgenGxE package. first step loading data R. dropsPheno contains data genotypic means (Best Linear Unbiased Estimators, BLUEs), one value per genotype per experiment, selection 10 experiments full data set eight traits. 10 experiments form good representation full set experiments covering five scenarios described Millet et al. (2016). Throughout vignette examples trait grain.yield analyzed. detailed description contents data see help(dropsData). input GxE analysis statgenGxE package object class TD (Trial Data). detailed description construct object see vignette statgenSTA package (vignette(\"Modeling field trials using statgenSTA\")). GxE analysis enough specify genotype trial option createTD function. analysis, can first look contents data. explore heterogeneity genetic variance can create box plot. Coloring boxes environmental scenario provide valuable extra information.  plot clear trials hot, water deficient environments lower median range trials. insight correlation structure trials scatter plot matrix can made.","code":"data(dropsPheno) ## Create a TD object from dropsPheno. dropsTD <- statgenSTA::createTD(data = dropsPheno, genotype = \"Variety_ID\", trial = \"Experiment\") ## Create a box plot of dropsTD. ## Color the boxes based on the variable scenarioFull. ## Plot in  descending order. plot(dropsTD, plotType = \"box\", traits = \"grain.yield\", colorTrialBy = \"scenarioFull\",      orderBy = \"descending\") ## Create a scatter plot of dropsTD. ## Color the genotypes based on the variable geneticGroup. ## Color the histograms for trials based on the variable scenarioFull. plot(dropsTD, plotType = \"scatter\", traits = \"grain.yield\", colorGenoBy = \"geneticGroup\",       colorTrialBy = \"scenarioFull\",       trialOrder = c(\"Gai12W\", \"Kar13R\", \"Kar12W\", \"Kar13W\", \"Mar13R\", \"Mur13W\",                     \"Mur13R\", \"Ner12R\", \"Cam12R\", \"Cra12R\"))"},{"path":"/articles/statgenGxE.html","id":"coloring-of-genotypes-and-trials","dir":"Articles","previous_headings":"Data preparation","what":"Coloring of genotypes and trials","title":"Genotype by Environment analysis using statgenGxE","text":"plots default colors genotype groups trial groups chosen predefined color palette. genotype groups color palette “Dark 2”, trial groups “Alphabet”. See overview colors. possible specify different colors genotype groups trial groups per plot using options colGeno colTrial respectively. Also, conveniently, default colors can set using options statgen.genoColors statgen.trialColors. plot genotype groups number colors specified default colors, default colors ignored topo.colors used instead. trial groups done similar way.","code":"## Set default colors for genotypes and trials. options(\"statgen.genoColors\" = c(\"blue\", \"green\", \"yellow\")) options(\"statgen.trialColors\" = c(\"red\", \"brown\", \"purple\"))"},{"path":"/articles/statgenGxE.html","id":"vcomp","dir":"Articles","previous_headings":"","what":"Mixed model analysis of GxE table of means","title":"Genotype by Environment analysis using statgenGxE","text":"investigate structure genotype environment data various mixed models can fitted. statgenGxE package can done using gxeVarComp function. Six different types models can fitted depending structure environments data. models described table , together function parameters used gxeVarComp fit model. data form GxE means, last random term models become residual term. GxE means provided together weights, residual term added models . aware plot data provided input data, mixed model analysis based assumption completely randomized trials, almost cases appropriate multi-environment trials. models can fitted using either lme4 asreml. can specified using engine parameter. diagnostic purposes identify main sources variation, models fitted three times: terms fixed terms random mixed model, bold terms random others fixed","code":""},{"path":"/articles/statgenGxE.html","id":"model-fitted-with-all-terms-as-fixed","dir":"Articles","previous_headings":"Mixed model analysis of GxE table of means","what":"Model fitted with all terms as fixed","title":"Genotype by Environment analysis using statgenGxE","text":"function first fits model model terms included fixed terms. Based ANOVA table model, terms fixed part model likely give problem fitting mixed model removed reduced connectivity number available observations estimate model term. Also warning printed mean sum squares model term points possible zero variance component mixed model.","code":""},{"path":"/articles/statgenGxE.html","id":"model-fitted-with-all-terms-as-random","dir":"Articles","previous_headings":"Mixed model analysis of GxE table of means","what":"Model fitted with all terms as random","title":"Genotype by Environment analysis using statgenGxE","text":"model fitted model terms included random terms. Based variance components model percentage variance explained model components determined. percentages variance printed model summary, together variance components. latter presented standard deviation scale.","code":""},{"path":"/articles/statgenGxE.html","id":"mixed-model","dir":"Articles","previous_headings":"Mixed model analysis of GxE table of means","what":"Mixed model","title":"Genotype by Environment analysis using statgenGxE","text":"Finally mixed model fitted specified table . Based model, variance components can extracted, heritabilities line mean basis (across trials) can computed predictions can made. also possible plot results. Note model fitted lme4, tables standard errors outputted. using asreml modeling standard errors available. diagnostics fitted model can printed using diagnostics function. print incidence matrix missing values terms random part fitted model. Extracting variance components fitted model can done using vc function. heritability (across trials) computed using herit. plot can made square roots variance component estimates. based fully random model. Predictions mixed model can made model terms represent different levels data aggregation; genotype main effect genotypic performance grouped environments, genotypic performance individual trials. levels can specified parameter predictLevel.","code":"## Fit a model where trials are nested within scenarios. dropsVarComp <- gxeVarComp(TD = dropsTD, trait = \"grain.yield\", nestingFactor = \"scenarioFull\") summary(dropsVarComp) #> Fitted model formula final mixed model #>  #>  grain.yield ~ scenarioFull + scenarioFull:trial + (1 | genotype) + (1 | genotype:scenarioFull)  #>  #> Sources of variation for fully random model: #>  grain.yield ~ (1 | scenarioFull) + (1 | scenarioFull:trial) + (1 | genotype) + (1 | genotype:scenarioFull)  #>  #>                       Component % Variance expl. #> scenarioFull              10.25          75.51 % #> scenarioFull:trial         1.58          11.64 % #> genotype                   0.82           6.02 % #> genotype:scenarioFull      0.38           2.77 % #> residuals                  0.55           4.06 % #>  #> Analysis of Variance Table for fully fixed model: #>  grain.yield ~ scenarioFull + scenarioFull:trial + genotype + genotype:scenarioFull  #>  #>                         Df  Sum Sq Mean Sq  F value    Pr(>F)     #> scenarioFull             4 21730.5  5432.6 9859.988 < 2.2e-16 *** #> scenarioFull:trial       5  1946.8   389.4  706.658 < 2.2e-16 *** #> genotype               245  2320.6     9.5   17.191 < 2.2e-16 *** #> genotype:scenarioFull  980  1278.1     1.3    2.367 < 2.2e-16 *** #> residuals             1225   674.9     0.6                        #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ## Print diagnostics - output suppressed because of the large number of rows. diagnostics(dropsVarComp) ## Extract variance components. vc(dropsVarComp) #>                       Component #> genotype                 0.8167 #> genotype:scenarioFull    0.3766 #> residuals                0.5510 ## Compute heritability. herit(dropsVarComp) #> [1] 0.8149 ## Plot the results of the fitted model. plot(dropsVarComp) ## Predictions of the genotype main effect. predGeno <- predict(dropsVarComp) head(predGeno) #>   genotype predictedValue #> 1    11430          6.725 #> 2       A3          6.319 #> 3     A310          5.722 #> 4     A347          5.576 #> 5     A374          7.470 #> 6     A375          6.650 ## predictions at the level of genotype x scenarioFull. predGenoTrial <- predict(dropsVarComp, predictLevel = \"scenarioFull\") head(predGenoTrial) #>   genotype scenarioFull predictedValue #> 1    11430      WW.Cool         10.681 #> 2       A3      WW.Cool          9.504 #> 3     A310      WW.Cool          9.793 #> 4     A347      WW.Cool          8.751 #> 5     A374      WW.Cool         10.970 #> 6     A375      WW.Cool          9.775"},{"path":"/articles/statgenGxE.html","id":"fw","dir":"Articles","previous_headings":"","what":"Finlay-Wilkinson Analysis","title":"Genotype by Environment analysis using statgenGxE","text":"Finlay-Wilkinson Analysis (Finlay Wilkinson 1963) describe genotype environment interaction heterogeneity slopes regression individual genotypic performance environmental index. environmental index average genotypes environment. intercept expresses general performance across environments, slope represents adaptability, residuals may indicate measure stability. model fitted analysis \\(y_{ij} = \\mu + G_i + \\beta_iE_j + \\epsilon_{ij}\\), \\(y_{ij}\\) phenotypic value genotype \\(\\) environment \\(j\\), \\(\\mu\\) general mean, \\(G_i\\) genotypic effect, \\(\\beta_i\\) sensitivity parameters, \\(E_j\\) environment effect \\(\\epsilon_{ij}\\) residual. statgenGxE package analysis can done using gxeFW function. model described fitted using alternating regression algorithm. First, using starting values \\(\\beta_i\\) \\(G_i\\), \\(E_j\\) estimated. Next, \\(E_j\\) assumed known \\(\\beta_i\\) \\(G_i\\) estimated. process continued convergence, .e. change \\(\\beta_i\\) iterations less specified tolerance (default 0.001). estimating parameters, missing observations estimated well. default trials TD object used analysis, can restricted using parameter trials. genotypes included analysis can restricted using genotypes. Four types plots can made investigate output analysis. plotType = \"scatter\" creates three scatter plots genotypic mean, square root mean squared deviation sensitivity plotted .  plotType = \"line\" plot fitted lines genotypes analysis created.  plotType = \"trellis\" creates trellis plot observations slopes per genotype. 64 genotypes plotted. possible select subset genotypes plotting using parameter genotypes.  plottType = \"scatterFit\" creates scatter plot fitted values trial highest environmental effect fitted values trial lowest environmental effect.","code":"## Perform a Finlay-Wilkinson analysis for all trials. dropsFW <- gxeFw(TD = dropsTD, trait = \"grain.yield\") summary(dropsFW) #> Environmental effects  #> ===================== #>     Trial      EnvEff SE_EnvEff  EnvMean SE_EnvMean Rank #> 1  Cam12R -4.93016532 0.0710838  1.97041   0.526746    9 #> 2  Cra12R -5.41700099 0.0710838  1.48358   0.564494   10 #> 3  Gai12W  4.29088420 0.0710838 11.19145   0.478808    1 #> 4  Kar12W  2.81602440 0.0710838  9.71659   0.378874    3 #> 5  Kar13R  2.98347060 0.0710838  9.88404   0.389212    2 #> 6  Kar13W  1.14169667 0.0710838  8.04227   0.298929    4 #> 7  Mar13R  0.83532848 0.0710838  7.73590   0.290526    5 #> 8  Mur13R -0.00198925 0.0710838  6.89858   0.280534    7 #> 9  Mur13W  0.53202700 0.0710838  7.43260   0.284630    6 #> 10 Ner12R -2.25027579 0.0710838  4.65030   0.346565    8 #>  #> Anova  #> ===== #>                 Df Sum Sq Mean Sq  F value Pr(>F)     #> Trial            9  23677  2630.8 3329.261 <2e-16 *** #> Genotype       245   2321     9.5   11.986 <2e-16 *** #> Sensitivities  245    404     1.6    2.088 <2e-16 *** #> Residual      1960   1549     0.8                     #> Total         2459  27951    11.4                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Most sensitive genotypes #> ======================== #>   Genotype GenMean SE_GenMean Rank    Sens   SE_Sens MSdeviation #>     Lo1251 9.03024   0.280534    1 1.34779 0.0904284    1.507974 #>   DK78371A 7.34072   0.280534    2 1.29340 0.0904284    0.313889 #>      PHG83 7.79922   0.280534    3 1.29337 0.0904284    1.447104 #>      FR697 7.48625   0.280534    4 1.27416 0.0904284    0.917458 #>  SC-Malawi 7.12909   0.280534    5 1.26473 0.0904284    1.272097 ## Create scatter plot for Finlay Wilkinson analysis. ## Color genotypes by geneticGroup. plot(dropsFW, plotType = \"scatter\", colorGenoBy = \"geneticGroup\") ## Create line plot for Finlay Wilkinson analysis. ## Color genotypes by geneticGroup. plot(dropsFW, plotType = \"line\", colorGenoBy = \"geneticGroup\") ## Create trellis plot for Finlay Wilkinson analysis. ## Restrict to first 5 genotypes. plot(dropsFW, plotType = \"trellis\", genotypes = c(\"11430\", \"A3\", \"A310\", \"A347\", \"A374\")) ## Create scatter plot of fitted values for Finlay Wilkinson analysis. ## Color genotypes by geneticGroup. plot(dropsFW, plotType = \"scatterFit\", colorGenoBy = \"geneticGroup\")"},{"path":"/articles/statgenGxE.html","id":"am","dir":"Articles","previous_headings":"","what":"AMMI Analysis","title":"Genotype by Environment analysis using statgenGxE","text":"Additive Main Effects Multiplicative Interaction (AMMI) model fits model involves Additive Main effects (.e. genotype trial) along Multiplicative Interaction effects. additive effects classical ANOVA main effects genotype environment, multiplicative effects follow principal component analysis interaction residuals (= genotype environment means adjustment additive genotype environment effects). results interaction characterized Interaction Principal Components (IPCA) enabling simultaneous plotting genotypes trials. data contains missing values, imputed first using iterative regression algorithm. algorithm regresses environment turn others. process repeated difference fitted values subsequent iterations becomes sufficiently small (see help(multMissing) details). imputation model fitted analysis \\(y_{ij} = \\mu + G_i + E_j + \\Sigma_{m =1}^M\\gamma_{mi}\\delta_{mj} + \\epsilon_{ij}\\), \\(M\\) number principal components, \\(y_{ij}\\) phenotypic value genotype \\(\\) environment \\(j\\), \\(\\mu\\) general mean, \\(G_i\\) genotypic effect, \\(E_j\\) environmental effect, \\(\\gamma_{mi}\\) genotypic scores, \\(\\delta_{mj}\\) environmental scores, \\(\\epsilon_{ij}\\) residual. AMMI analysis can performed statgenGxE package using function gxeAmmi. default settings AMMI analysis maximum two principal components used. can changed using parameter nPC function. number principal components lower smallest number genotypes environments minus one. specifying nPC = NULL algorithm determine number principal components method forward selection. summary clear final number principal components, determined forward selection, seven. possible exclude certain genotypes, e.g. outliers, analysis using parameter excludeGeno. data contains column year, possible fit separate AMMI model year. can done specifying parameter byYear = TRUE. run AMMI analysis years data without taking account data years. results AMMI analysis can displayed two types plot. “AMMI1” plots first principal component main effects. “AMMI2” plots second first principal component.  AMMI biplots appear three forms (Gower Hand 1996): genotype scaling, emphasis approximation relations genotypes (scale = 0) environment scaling, emphasis approximation relations environments (scale = 1) symmetric scaling, compromise (scale = 0.5)  AMMI plot function many options customize plot. possible plot different principal components axes specifying primAxis secAxis. Genotypes can grouped colored variable data using colorGenoBy. Specify custom colors colGeno. Similarly coloring environments use colorEnvBy colEnv.  convex hull can plotted around genotypes AMMI2 biplot.  easier interpretation results shown biplots, possible rotate whole plot configuration specified user. can done setting rotatePC environment genotype aligned positive x-axis plot.  Genotypes can left plot completely setting plotGeno = FALSE similarly plotEnv = FALSE assures environments plotted. displaying genotypes names instead points, use sizeGeno size larger zero indicate text size. envFactor can used blow environmental scores plot. value envFactor zero one effectively blows genotypic scores. See help(plot.AMMI) full details plotting options.","code":"## Run gxeAmmi for grain.yield. dropsAm <- gxeAmmi(TD = dropsTD, trait = \"grain.yield\") summary(dropsAm) #> Principal components  #> ==================== #>                            PC1     PC2 #> Standard deviation     1.59365 1.16125 #> Proportion of Variance 0.31860 0.16916 #> Cumulative Proportion  0.31860 0.48776 #>  #> Anova  #> ===== #> Analysis of Variance Table #>  #> Response: grain.yield #>                Df Sum Sq Mean Sq  F value Pr(>F)     #> Trial           9  23677  2630.8 2970.187 <2e-16 *** #> Genotype      245   2321     9.5   10.694 <2e-16 *** #> Interactions 2205   1953     0.9                     #> PC1           253    622     2.5    4.182 <2e-16 *** #> PC2           251    330     1.3    2.238 <2e-16 *** #> Residuals    1701   1000     0.6                     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Environment scores  #> ================== #>               PC1        PC2 #> Cam12R  0.4422147  0.1214471 #> Cra12R  0.4357878  0.0228969 #> Gai12W  0.0693329 -0.4178891 #> Kar12W -0.0329114  0.2499027 #> Kar13R -0.3648773 -0.4132687 #> Kar13W -0.3620128 -0.3924541 #> Mar13R  0.0924811  0.1666174 #> Mur13R -0.2854567  0.3230107 #> Mur13W -0.3539324  0.5112075 #> Ner12R  0.3593742 -0.1714703 ## Run gxeAmmi. Let algorithm determine number of principal components. dropsAm2 <- gxeAmmi(TD = dropsTD, trait = \"grain.yield\", nPC = NULL) summary(dropsAm2) #> Principal components  #> ==================== #>                            PC1     PC2     PC3      PC4      PC5      PC6      PC7 #> Standard deviation     1.59365 1.16125 1.03717 0.931089 0.825373 0.711735 0.661859 #> Proportion of Variance 0.31860 0.16916 0.13494 0.108750 0.085460 0.063550 0.054950 #> Cumulative Proportion  0.31860 0.48776 0.62270 0.731450 0.816910 0.880460 0.935410 #>  #> Anova  #> ===== #> Analysis of Variance Table #>  #> Response: grain.yield #>                Df Sum Sq Mean Sq  F value   Pr(>F)     #> Trial           9  23677  2630.8 2970.187  < 2e-16 *** #> Genotype      245   2321     9.5   10.694  < 2e-16 *** #> Interactions 2205   1953     0.9                       #> PC1           253    622     2.5    9.280  < 2e-16 *** #> PC2           251    330     1.3    4.967  < 2e-16 *** #> PC3           249    264     1.1    3.994  < 2e-16 *** #> PC4           247    212     0.9    3.245  < 2e-16 *** #> PC5           245    167     0.7    2.570  < 2e-16 *** #> PC6           243    124     0.5    1.927 7.04e-10 *** #> PC7           241    107     0.4    1.680 9.66e-07 *** #> Residuals     476    126     0.3                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Environment scores  #> ================== #>               PC1        PC2        PC3        PC4        PC5        PC6        PC7 #> Cam12R  0.4422147  0.1214471 -0.2369571  0.0930633 -0.2551905  0.1253164  0.1961217 #> Cra12R  0.4357878  0.0228969 -0.3241345  0.0408753 -0.3491380  0.1273883  0.0138441 #> Gai12W  0.0693329 -0.4178891 -0.1744131  0.2772191  0.6223073  0.3705224 -0.2762854 #> Kar12W -0.0329114  0.2499027  0.7045194  0.5170036 -0.1714308  0.1483767 -0.1121918 #> Kar13R -0.3648773 -0.4132687  0.0376676  0.0679819 -0.0676313 -0.0331790  0.7592167 #> Kar13W -0.3620128 -0.3924541 -0.0402238 -0.2244351 -0.5039275 -0.0615522 -0.5330438 #> Mar13R  0.0924811  0.1666174  0.3375440 -0.7634903  0.1925495  0.3287360  0.0748694 #> Mur13R -0.2854567  0.3230107 -0.1777747  0.0157987  0.1310997  0.0625228 -0.0122844 #> Mur13W -0.3539324  0.5112075 -0.3419304  0.0474776  0.1619466 -0.2876442 -0.0503901 #> Ner12R  0.3593742 -0.1714703  0.2157025 -0.0714941  0.2394149 -0.7804873 -0.0598564 ## Run gxeAmmi with three principal components. ## Exclude genotypes 11430 and A3. dropsAm3 <- gxeAmmi(TD = dropsTD, trait = \"grain.yield\", nPC = 3,                      excludeGeno = c(\"11430\", \"A3\")) ## Run gxeAmmi per year in the data. dropsAmYear <- gxeAmmi(TD = dropsTD, trait = \"grain.yield\", byYear = TRUE) ## Create an AMMI1 plot. plot(dropsAm, plotType = \"AMMI1\") ## Create an AMMI2 biplot with symmetric scaling. plot(dropsAm, scale = 0.5, plotType = \"AMMI2\") ## Create an AMMI2 biplot. ## Color genotypes based on variable geneticGroup. Use custom colors. ## Color environments based on variable scenarioFull. plot(dropsAm, scale = 0.4, plotType = \"AMMI2\",       colorGenoBy = \"geneticGroup\", colGeno = c(\"red\", \"blue\", \"green\", \"yellow\"),      colorEnvBy = \"scenarioFull\") ## Create an AMMI2 biplot with convex hull around the genotypes. plot(dropsAm, scale = 0.4, plotType = \"AMMI2\", plotConvHull = TRUE, colorEnvBy = \"scenarioFull\") ## Create an AMMI2 biplot. ## Align environment Mur13W with the positive x-axis. plot(dropsAm, scale = 0.4, plotType = \"AMMI2\", colorEnvBy = \"scenarioFull\",      rotatePC = \"Mur13W\")"},{"path":"/articles/statgenGxE.html","id":"gge","dir":"Articles","previous_headings":"","what":"GGE Analysis","title":"Genotype by Environment analysis using statgenGxE","text":"Genotype plus Genotype Environment (GGE) analysis similar AMMI analysis. difference first step , instead genotype environment, environment fitted main effect model. Therefore, principal component analysis performed genotype main effect interaction jointly. essence, GGE analysis fits principal components model two components two-way genotype environment table data centered per environment. model fitted GGE analysis \\(y_{ij} = \\mu + E_j + \\gamma_{1i}\\delta_{1j} + \\gamma_{2i}\\delta_{2j} + \\epsilon_{ij}\\), parameters described AMMI analysis. GGE analysis done statgenGxE running function gxeGGE identical options gxeAmmi function. Options plotting results GGE analysis identical AMMI analysis. convex hull plotted, lines origin perpendicular edges hull added well. default settings plot rotated positive x-axis aligns genotypic main effect, average directions environments. y-axis shows GxE.","code":"## Run gxeGGE with default settings. dropsGGE <- gxeGGE(TD = dropsTD, trait = \"grain.yield\") summary(dropsGGE)  #> Principal components  #> ==================== #>                            PC1     PC2 #> Standard deviation     3.29808 1.16854 #> Proportion of Variance 0.62358 0.07828 #> Cumulative Proportion  0.62358 0.70186 #>  #> Anova  #> ===== #> Analysis of Variance Table #>  #> Response: grain.yield #>             Df Sum Sq Mean Sq  F value   Pr(>F)     #> Trial        9  23677  2630.8 1508.201  < 2e-16 *** #> GGE       2450   4274     1.7                       #> PC1        254   2665    10.5   16.008  < 2e-16 *** #> PC2        252    335     1.3    2.026 2.22e-16 *** #> Residuals 1944   1274     0.7                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Environment scores  #> ================== #>             PC1        PC2 #> Cam12R 0.129437  0.0379476 #> Cra12R 0.104238  0.0935894 #> Gai12W 0.278606  0.4476497 #> Kar12W 0.307360 -0.1771409 #> Kar13R 0.436810  0.3169631 #> Kar13W 0.429534  0.2866136 #> Mar13R 0.275734 -0.0465212 #> Mur13R 0.395051 -0.3667764 #> Mur13W 0.409046 -0.5838223 #> Ner12R 0.159916  0.3128596 ## Create a GGE2 biplot. plot(dropsGGE, plotType = \"GGE2\")"},{"path":"/articles/statgenGxE.html","id":"me","dir":"Articles","previous_headings":"","what":"Identifying mega environments","title":"Genotype by Environment analysis using statgenGxE","text":"computation mega environments, AMMI-2 model fitted , using fitted values model, environments clustered. Mega environments created grouping environments based best performing genotype. Environments share best genotype belong mega environment. can seen column Mega factor summary, four mega environments created, one winning genotypes “Lo1087”, “Lo1251”, “Lo1270” “PHG35”. values Best Linear Unbiased Predictors (BLUPs) associated standard errors genotypes based calculated mega environments, can computed using function predict output. can done using either lme4 (Bates et al. 2015) asreml (Butler et al. 2017) engine fitting model. results predictions can visualized scatter plot using plot functions. creates similar plot one described data preparation section earlier vignette. However, now predicted values genotypes different mega environments displayed. predictions calculated inside plot functions. default lme4 used . change asreml specify engine = asreml. Genotypes can colored value variable TD object used calculating mega environments specifying colorGenoBy.","code":"## Compute mega environments. dropsMegaEnv <- gxeMegaEnv(TD = dropsTD, trait = \"grain.yield\") ## Summarize results. summary(dropsMegaEnv) #> Mega environments based on grain.yield #>  #>  Mega_factor  Trial Winning_genotype AMMI_estimates #>    megaEnv_1 Kar12W           Lo1087        12.4621 #>    megaEnv_1 Mar13R           Lo1087        10.0328 #>    megaEnv_1 Mur13R           Lo1087        10.4911 #>    megaEnv_1 Mur13W           Lo1087        11.3054 #>    megaEnv_2 Kar13R           Lo1251        13.6593 #>    megaEnv_2 Kar13W           Lo1251        11.7879 #>    megaEnv_3 Gai12W           Lo1270        13.7960 #>    megaEnv_4 Cam12R            PHG35         4.2604 #>    megaEnv_4 Cra12R            PHG35         3.8492 #>    megaEnv_4 Ner12R            PHG35         7.0998 if (requireNamespace(package = \"asreml\", quietly = TRUE)) {   ## Compute BLUPs.   ## Use asreml as engine for fitting model.   geMegaEnvPred <- predict(dropsMegaEnv, engine = \"asreml\")   ## Display BLUPs.   head(geMegaEnvPred$predictedValue) } if (requireNamespace(package = \"asreml\", quietly = TRUE)) {   ## Display standard errors of the BLUPs.   head(geMegaEnvPred$standardError) } if (requireNamespace(package = \"asreml\", quietly = TRUE)) {   ## Create a scatter plot of predictions in mega environments.   ## Color genotypes based on geneticGroup.   plot(dropsMegaEnv, engine = \"asreml\", colorGenoBy = \"geneticGroup\") }"},{"path":"/articles/statgenGxE.html","id":"st","dir":"Articles","previous_headings":"","what":"Stability measures","title":"Genotype by Environment analysis using statgenGxE","text":"Different measures stability can calculated using statgenGxE package, cultivar-superiority measure Lin & Binns (Lin Binns 1988), Shukla’s stability variance (Shukla 1972) Wricke’s ecovalence (Wricke 1962). cultivar-superiority function sum squared differences cultivar’s mean best cultivar’s mean, sum across trials.. Genotypes smallest values superiority tend stable, closer best genotype environment. Shukla’s stability variance (static stability) defined variance around genotype’s phenotypic mean across environments. provides measure consistency genotype, without accounting performance. Wricke’s Ecovalence Stability Coefficient contribution genotype GxE sum squares, unweighted analysis GxE means. low value indicates genotype responds consistent manner changes environment; .e. stable dynamic point view. compute stability measures use gxeStability. compute three stability measures described . Plotting results yields scatter plot square root stability measure, plotted genotypic mean.","code":"## Compute stability measures for dropsTD. dropsStab <- gxeStability(TD = dropsTD, trait = \"grain.yield\") ## In the summary print the top two percent of the genotypes. summary(dropsStab, pctGeno = 2) #>  #> Cultivar-superiority measure (Top 2 % genotypes) #>  Genotype    Mean Superiority #>      Pa36 4.03790     21.7865 #>      F252 4.35804     19.8752 #>     CO109 4.73382     17.6806 #>    EA1163 4.68129     17.4563 #>      EP72 4.83195     17.3885 #>  #> Static stability (Top 2 % genotypes) #>   Genotype    Mean  Static #>     Lo1251 9.03024 20.7656 #>      PHG83 7.79922 19.1744 #>  SC-Malawi 7.12909 18.2355 #>      FR697 7.48625 18.1761 #>   DK78371A 7.34072 18.1680 #>  #> Wricke's ecovalence (Top 2 % genotypes) #>  Genotype    Mean  Wricke #>      A310 5.64885 26.0203 #>    Lo1251 9.03024 24.1650 #>   UH_P064 6.81195 22.9318 #>    Lo1270 8.35135 22.2490 #>     PHG83 7.79922 20.0827 ## Create plots for the different stability measures. ## Color genotypes by geneticGroup. plot(dropsStab, colorGenoBy = \"geneticGroup\")"},{"path":"/articles/statgenGxE.html","id":"vcov","dir":"Articles","previous_headings":"","what":"Modeling of heterogeneity of genetic variances and correlations","title":"Genotype by Environment analysis using statgenGxE","text":"function gxeVarCov allows fit linear mixed models varying complexity set trials without clear structure. trials can organized locations, years, regions scenarios, mixed models section Mixed model analysis GxE table means appropriate. objective function identify model genetic variances correlations across trials help quantifying genetic similarities trials understanding structure genotype environment interactions. identified variance-covariance structure can used random background multi-environment QTL model. Models can fitted using either lme4 asreml modeling engine. engine set ‘lme4’, model considering multiple variance components, compound symmetry variance-covariance structure can fitted. engine set ‘asreml’, complex variance-covariance structures fitted sequentially genotype environment data. best fitting model identified. models fitted form \\(y_{ij} = \\mu_j + \\epsilon_{ij}\\), \\(y_{ij}\\) phenotypic value genotype \\(\\) environment \\(j\\), \\(\\mu_j\\) environmental mean, \\(\\epsilon_{ij}\\) represents mainly genetic variation, although non-genetic variation may included well. random term \\(\\epsilon_{ij}\\) modeled eight ways described table (see (Boer et al. 2007)). table \\(J\\) number environments, \\(\\sigma_G^2\\) variance component genotype main effects, \\(\\sigma_{GE}^2\\) variance component GxE interactions. \\(\\sigma_{G_j}^2\\) \\(\\sigma_{GE_j}^2\\) environment specific variance components genotype main effects GxE interaction environment \\(j\\). \\(\\sigma_{G_{j,k}}^2\\) genetic covariance environments \\(j\\) \\(k\\). \\(\\theta\\) common correlation environments \\(\\lambda_{1j}\\) \\(\\lambda_{2j}\\) environment specific multiplicative parameters. possible select subset models fitted specifying models parameter gxeVarCov function. best model data selected based either Akaike Information Criterion (AIC (Akaike 1974)) Baysian Information Criterion (BIC (Schwarz 1978)). criterion used determined parameter criterion function gxeVarCov. Note factor analytic models fitted minimum five environments needed. data contains less environments, two models skipped. heat map correlation environments based best fitted model can plotted. instructive compare fitted correlations section ‘observed’ correlations section Data preparation GGE biplot section GGE analysis. Comparisons mixed models section Mixed model analysis GxE table means also relevant. plot correlations environments shown. dark red color indicates strong positive correlation environments, dark blue color strong negative correlation. Environments clustered correlations ordered according results clustering.","code":"## Use lme4 for fitting the models - only compound symmetry. dropsVC <- gxeVarCov(TD = dropsTD, trait = \"grain.yield\") summary(dropsVC) #> Best model: cs, based on BIC. #>         AIC     BIC Deviance NParameters #> cs 7295.144 7306.76 7291.144           2 ## Use asreml for fitting the models - eight models fitted.  ## Use AIC as criterion for determining the best model. if (requireNamespace(\"asreml\", quietly = TRUE)) {   dropsVC2 <- gxeVarCov(TD = dropsTD, trait = \"grain.yield\", engine = \"asreml\", criterion = \"AIC\")   summary(dropsVC2) } if (requireNamespace(\"asreml\", quietly = TRUE)) {   plot(dropsVC2) }"},{"path":"/articles/statgenGxE.html","id":"fitted-values-and-residuals","dir":"Articles","previous_headings":"","what":"Fitted values and residuals","title":"Genotype by Environment analysis using statgenGxE","text":"Fitted values residuals models fitted using AMMI, GGE, Finlay-Wilkinson, selected variance-covariance model can extracted using functions fitted residuals respectively. can useful investigating quality fitted model e.g. creating diagnostic plots fitted values residuals.","code":"## Extract the fitted values and residuals for the Finlay-Wilkinson model. fitFW <- fitted(dropsFW) resFW <- residuals(dropsFW)  ## Create a diagnostic plot of fitted values against residuals. fitResFW <- merge(fitFW, resFW, by = c(\"trial\", \"genotype\")) ggplot2::ggplot(fitResFW, ggplot2::aes(x = fittedValue, y = residual,                                        color = trial)) +   ggplot2::geom_point()"},{"path":"/articles/statgenGxE.html","id":"rep","dir":"Articles","previous_headings":"","what":"Reporting","title":"Genotype by Environment analysis using statgenGxE","text":"analyses described vignette pdf report can made using report function. report typically consists overview analysis parameters used interesting results plots analysis. Except pdf report also .tex file used generate report folder containing figures report, generated. make easy adapt report user’s specific needs. Note reports created using pdflatex. installation found Sys.(\"pdflatex\") report function generate error. analysis done vignette reports can made. Specify file .pdf extension outfile set location report written.","code":"## Create a report for the Finlay Wilkinson analysis. report(dropsFW, outfile = \"./myReports/FWReport.pdf\")  ## Create a report for the AMMI analysis. report(dropsAm, outfile = \"./myReports/AMMIReport.pdf\")  ## Create a report for the GGE analysis. report(dropsGGE, outfile = \"./myReports/GGEReport.pdf\")  ## Create a report for the stability analysis. report(dropsStab, outfile = \"./myReports/stabReport.pdf\")  ## Create a report for the analysis of two-way GxE tables. report(dropsVC2, outfile = \"./myReports/varCompReport.pdf\")"},{"path":"/articles/statgenGxE.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Genotype by Environment analysis using statgenGxE","text":"Akaike, H. 1974. “New Look Statistical Model Identification.” IEEE Transactions Automatic Control 19 (6): 716–23. https://doi.org/10.1109/tac.1974.1100705. Bates, Douglas, Martin Mächler, Ben Bolker, Steve Walker. 2015. “Fitting Linear Mixed-Effects Models Using Lme4.” Journal Statistical Software 67 (1). https://doi.org/10.18637/jss.v067.i01. Boer, Martin P., Deanne Wright, Lizhi Feng, Dean W. Podlich, Lang Luo, Mark Cooper, Fred . van Eeuwijk. 2007. “Mixed-Model Quantitative Trait Loci (QTL) Analysis Multiple-Environment Trial Data Using Environmental Covariables QTL--Environment Interactions, Example Maize.” Genetics 177 (3): 1801–13. https://doi.org/10.1534/genetics.107.071068. Butler, D. G., B. R. Cullis, . R. Gilmour, B. G. Gogel, R. Thompson. 2017. “ASReml-R Reference Manual Version 4.” https://www.vsni.co.uk/. Finlay, KW, GN Wilkinson. 1963. “Analysis Adaptation Plant-Breeding Programme.” Australian Journal Agricultural Research 14 (6): 742. https://doi.org/10.1071/ar9630742. Gower, John, David Hand. 1996. Biplots. London New York: Chapman & Hall. Lin, C. S., M. R. Binns. 1988. “Superiority Measure Cultivar Performance Cultivar Location Data.” Canadian Journal Plant Science 68 (1): 193–98. https://doi.org/10.4141/cjps88-018. Malosetti, Marcos, Jean-Marcel Ribaut, Fred . van Eeuwijk. 2013. “Statistical Analysis Multi-Environment Data: Modeling Genotype--Environment Interaction Genetic Basis.” Frontiers Physiology 4. https://doi.org/10.3389/fphys.2013.00044. Millet, Emilie J., Cyril Pommier, Mélanie Buy, Axel Nagel, Willem Kruijer, Therese Welz-Bolduan, Jeremy Lopez, et al. 2019. “Multi-Site Experiment Network European Fields Assessing Maize Yield Response Environmental Scenarios.” Portail Data Inra. https://doi.org/10.15454/IASSTN. Millet, Emilie, Claude Welcker, Willem Kruijer, Sandra Negro, Stephane Nicolas, Sebastien Praud, Nicolas Ranc, et al. 2016. “Genome-Wide Analysis Yield Europe: Allelic Effects Functions Drought Heat Scenarios.” Plant Physiology, July, pp.00621.2016. https://doi.org/10.1104/pp.16.00621. Schwarz, Gideon. 1978. “Estimating Dimension Model.” Annals Statistics 6 (2): 461–64. https://doi.org/10.1214/aos/1176344136. Shukla, G K. 1972. “Statistical Aspects Partitioning Genotype-Environmental Components Variability.” Heredity 29 (2): 237–45. https://doi.org/10.1038/hdy.1972.87. van Eeuwijk, Fred ., Daniela V. Bustos-Korts, Marcos Malosetti. 2016. “Students Plant Breeding Know Statistical Aspects Genotype Environment Interactions?” Crop Science 56 (5): 2119–40. https://doi.org/10.2135/cropsci2015.06.0375. Wricke, G. 1962. “Evaluation Method Recording Ecological Differences Field Trials.” Z Pflanzenzücht 47: 92–96.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bart-Jan van Rossum. Author, maintainer. Fred van Eeuwijk. Contributor. Martin Boer. Contributor. Marcos Malosetti. Contributor. Daniela Bustos-Korts. Contributor. Emilie J Millet. Contributor. Joao Paulo. Contributor. Maikel Verouden. Contributor. Willem Kruijer. Contributor. Ron Wehrens. Contributor. Choazhi Zheng. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van Rossum B (2022). statgenGxE: Genotype Environment (GxE) Analysis. https://biometris.github.io/statgenGxE/index.html, https://github.com/Biometris/statgenGxE/.","code":"@Manual{,   title = {statgenGxE: Genotype by Environment (GxE) Analysis},   author = {Bart-Jan {van Rossum}},   year = {2022},   note = {https://biometris.github.io/statgenGxE/index.html, https://github.com/Biometris/statgenGxE/}, }"},{"path":"/index.html","id":"statgengxe","dir":"","previous_headings":"","what":"An R package for genotype by environment analysis","title":"An R package for genotype by environment analysis","text":"statgenGxE R package providing functions Genotype Environment (GxE) analysis data plant breeding experiments. following types analysis can done using statgenGxE: Mixed model analysis GxE table means Finlay-Wilkinson Analysis AMMI Analysis GGE Analysis Identifying mega environments Stability measures Modeling heterogeneity genetic variances correlations statgenGxE extensive options summarizing visualizing results analyses. full overview options best read vignette","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package for genotype by environment analysis","text":"Install CRAN: Install latest development version GitHub (requires remotes package):","code":"install.packages(\"statgenGxE\") remotes::install_github(\"Biometris/statgenGxE\", ref = \"develop\", dependencies = TRUE)"},{"path":"/reference/AMMI.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 class AMMI — AMMI","title":"S3 class AMMI — AMMI","text":"Function creating objects S3 class AMMI.print, summary, plot report methods available.","code":""},{"path":"/reference/AMMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 class AMMI — AMMI","text":"","code":"createAMMI(   envScores,   genoScores,   importance,   anova,   fitted,   trait,   envMean,   genoMean,   overallMean,   dat,   GGE,   byYear )"},{"path":"/reference/AMMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 class AMMI — AMMI","text":"envScores matrix containing environmental scores. genoScores matrix containing genotypic scores. importance data.frame containing importance principal components. anova data.frame containing anova scores AMMI analysis. fitted matrix containing fitted values AMMI model. trait character string indicating analyzed trait. envMean numerical vector containing environmental means. genoMean numerical vector containing genotypic means. overallMean numerical value containing overall mean. GGE GGE analysis performed? byYear analysis performed year?","code":""},{"path":[]},{"path":"/reference/CRDR.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the correlated response to selection — CRDR","title":"Calculate the correlated response to selection — CRDR","text":"Calculate correlated response selection (CRDR) based fitted model. CRDR calculated described Atlin et al. E.g. model trials nested within scenarios, random part looks like : genotype + genotype:scenario + genotype:scenario:trial CRDR calculated : $$H1 = \\sigma_G^2 / (\\sigma_G^2 + \\sigma_S^2 / s + \\sigma_{ST}^2 / st + \\sigma_E^2 / str)$$ $$H2 = (\\sigma_G^2 + \\sigma_S^2) / (\\sigma_G^2 + \\sigma_S^2 + \\sigma_{ST}^2 / st + \\sigma_E^2 / str)$$ $$CRDR = (\\sigma_G^2 / (\\sigma_G^2 + \\sigma_S^2)) * sqrt(H1 / H2)$$ formulas \\(\\sigma\\) terms stand standard deviations respective model terms, lower case letters number levels respective model terms. \\(\\sigma_S\\) standard deviation scenario term model \\(s\\) number scenarios. \\(\\sigma_E\\) corresponds residual standard deviation \\(r\\) number replicates.","code":""},{"path":"/reference/CRDR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the correlated response to selection — CRDR","text":"","code":"CRDR(varComp)"},{"path":"/reference/CRDR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the correlated response to selection — CRDR","text":"varComp object class varComp.","code":""},{"path":"/reference/CRDR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the correlated response to selection — CRDR","text":"Atlin, G. N., Baker, R. J., McRae, K. B., & Lu, X. (2000). Selection response subdivided target regions. Crop Science, 40(1), 7–13. doi:10.2135/cropsci2000.4017","code":""},{"path":[]},{"path":"/reference/FW.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 class FW — FW","title":"S3 class FW — FW","text":"Function creating objects S3 class FW (Finlay-Wilkinson).print, summary, plot report methods available.","code":""},{"path":"/reference/FW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 class FW — FW","text":"","code":"createFW(   estimates,   anova,   envEffs,   trait,   nGeno,   nEnv,   TD,   fittedGeno,   tol,   iter )"},{"path":"/reference/FW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 class FW — FW","text":"estimates data.frame containing estimated values. anova data.frame containing anova scores FW analysis. envEffs data.frame containing environmental effects. trait character value indicating analysed trait. nGeno numerical value containing number genotypes analysis. nEnv numerical value containing number environments analysis. TD object class TD analysis performed. fittedGeno fitted values genotypes. tol numerical value containing tolerance used analysis. iter numerical value containing number iterations analysis converge.","code":""},{"path":[]},{"path":"/reference/TDMaize.html","id":null,"dir":"Reference","previous_headings":"","what":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"dataset converted TD object containing data corresponding F2 maize reference population CIMMYT maize drought breeding program, derived cross drought-tolerant line (P1) drought susceptible line (P2) described detail Ribaut et al. (1996, 1997). DNA 211 F2 plants extracted produce information 132 co-dominant markers 10 linkage groups. Phenotypic evaluations performed 211 F2:3 families, one derived original F2 plant. families evaluated different water nitrogen regimes 1992, 1994 1996. winter 1992 three water regimes imposed trials: well watered (NS), intermediate stress () severe stress (SS). winter 1994, SS trials available. Nitrogen availability varied 1996 trials, two low nitrogen treatments (LN, winter summer) one high-nitrogen treatment (HN summer). trials, five traits evaluated grain yield included data.","code":""},{"path":"/reference/TDMaize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"","code":"TDMaize"},{"path":"/reference/TDMaize.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"TD object, list containing 8 data.frames, following columns: trial trial, combination water regime, year nitrogen treatment genotype genotype yld grain yield tons","code":""},{"path":"/reference/TDMaize.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"https://link.springer.com/article/10.1007/BF00221905","code":""},{"path":"/reference/TDMaize.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Field data for a maize experiment in Tlaltizapan, Mexico — TDMaize","text":"Ribaut JM, Hoisington DA, Deutsch JA, Jiang C, Gonzalez de Leon D (1996) Identification quantitative trait loci drought conditions tropical maize.1. Flowering parameters anthesis-silking interval. Theor Appl Genet 92:905–914 Ribaut JM, Jiang C, Gonzalez de Leon D, Edmeades GO, Hoisington DA (1997) Identification quantitative trait loci drought conditions tropical maize.2. Yield components marker-assisted selection strategies. Theor Appl Genet 94:887–896","code":""},{"path":"/reference/correlations.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute different types of correlations. — correlations","title":"Compute different types of correlations. — correlations","text":"Compute three types correlations models fitted nesting factor. correlation scenarios environment types: $$\\sigma_G^2 / (\\sigma_G^2 + \\sigma_{GS}^2)$$ correlation trials within scenarios environment types: $$(\\sigma_G^2 + \\sigma_{GS}^2) / (\\sigma_G^2 + \\sigma_{GS}^2 + \\sigma_E^2)$$ correlation trials belong different scenarios/environment types: $$\\sigma_G^2 / (\\sigma_G^2 + \\sigma_{GS}^2 + \\sigma_E^2)$$ formulas \\(\\sigma\\) terms stand standard deviations respective model terms. \\(\\sigma_S\\) standard deviation scenario term model, \\(\\sigma_{GS}\\) standard deviation genotype scenario term \\(\\sigma_E\\) corresponds residual standard deviation.","code":""},{"path":"/reference/correlations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute different types of correlations. — correlations","text":"","code":"correlations(varComp)"},{"path":"/reference/correlations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute different types of correlations. — correlations","text":"varComp object class varComp.","code":""},{"path":"/reference/correlations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute different types of correlations. — correlations","text":"list three correlations.","code":""},{"path":[]},{"path":"/reference/createVarComp.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 class varComp — createVarComp","title":"S3 class varComp — createVarComp","text":"Function creating objects S3 class varComp.print, summary, plot methods available.","code":""},{"path":"/reference/createVarComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 class varComp — createVarComp","text":"","code":"createVarComp(   fitMod,   modDat,   trait,   nestingFactor,   useLocYear,   useRegionLocYear,   fullRandVC,   aovFullFixedMod,   engine,   diagTabs )"},{"path":"/reference/createVarComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 class varComp — createVarComp","text":"fitMod fitted variance components model. modDat data.frame containing data used fitting model.","code":""},{"path":"/reference/diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get diagnostics for an object of class varComp — diagnostics","title":"Get diagnostics for an object of class varComp — diagnostics","text":"Get diagnostics model fitted. print table combinations missing data. random factor model table printed.","code":""},{"path":"/reference/diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get diagnostics for an object of class varComp — diagnostics","text":"","code":"diagnostics(varComp)"},{"path":"/reference/diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get diagnostics for an object of class varComp — diagnostics","text":"varComp object class varComp.","code":""},{"path":"/reference/diagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get diagnostics for an object of class varComp — diagnostics","text":"list tables invisibly returned.","code":""},{"path":[]},{"path":"/reference/diagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get diagnostics for an object of class varComp — diagnostics","text":"","code":"## Fit a mixed model. geVarComp <- gxeVarComp(TD = TDMaize, trait = \"yld\")  ## Display diagnostics. diagnostics(geVarComp) #> No missing combinations for genotype x trial. #>"},{"path":"/reference/dropsPheno.html","id":null,"dir":"Reference","previous_headings":"","what":"DROPS data set — dropsPheno","title":"DROPS data set — dropsPheno","text":"dataset comes European Union project DROPS (DROught-tolerant yielding PlantS). panel 256 maize hybrids grown two water regimes (irrigated rainfed), seven fields 2012 2013, respectively, spread along climatic transect western eastern Europe, plus one site Chile 2013. resulted 28 experiments defined combination one year, one site one water regime, two three repetitions rainfed irrigated treatments, respectively. detailed environmental characterisation carried , hourly records micrometeorological data soil water status, associated precise measurement phenology. Grain yield components measured end experiment. 10 experiments selected full data set, two five main environmental scenarios identified data. scenarios added data well classification genotypes four genetic groups.","code":""},{"path":"/reference/dropsPheno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DROPS data set — dropsPheno","text":"","code":"dropsPheno"},{"path":"/reference/dropsPheno.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DROPS data set — dropsPheno","text":"object class data.frame 2460 rows 20 columns.","code":""},{"path":"/reference/dropsPheno.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"DROPS data set — dropsPheno","text":"doi:10.15454/IASSTN","code":""},{"path":"/reference/dropsPheno.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"DROPS data set — dropsPheno","text":"data.frame contains genotypic means  (Best Linear Unbiased Estimators, BLUEs), one value per experiment  (Location × year × water regime) per genotype. data.frame 2460 rows 19 columns. Experiment experiments ID described three first letters city’s name followed year experiment water regime W watered R rain-fed. parent1 identifier donor dent line Code_ID, Variety_ID, Accession_ID identifier genotype geno.panel project genetic material generated grain.yield genotypic mean yield adjusted 15\\ ton per hectare (t ha^-1) grain.number genotypic mean number grain per square meter grain.weight genotypic mean individual grain weight milligram (mg) anthesis genotypic mean male flowering (pollen shed), thermal time cumulated since emergence (d_20°C) silking genotypic mean female flowering (silking emergence), thermal time cumulated since emergence (d_20°C) plant.height genotypic mean plant height, ground level base flag leaf (highest) leaf centimeter (cm) tassel.height genotypic mean plant height including tassel, ground level highest point tassel centimeter (cm) ear.height genotypic mean ear insertion height, ground level ligule highest ear leaf centimeter (cm) year year experiment performed loc location experiment performed, three letter abbreviation scenarioWater water scenario experiment, well watered (WW) water deficit (WD) scenarioTemp temperature scenario experiment, Cool, Hot Hot(Day) scenarioFull full scenario experiment, combination scenarioWater scenarioTemp geneticGroup genetic group genotype belongs","code":""},{"path":"/reference/dropsPheno.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DROPS data set — dropsPheno","text":"Millet, E. J., Pommier, C., et al. (2019). multi-site experiment network European fields assessing maize yield response environmental scenarios (Data set). doi:10.15454/IASSTN","code":""},{"path":"/reference/fitted.AMMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values. — fitted.AMMI","title":"Extract fitted values. — fitted.AMMI","text":"Extract fitted values object class AMMI.","code":""},{"path":"/reference/fitted.AMMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values. — fitted.AMMI","text":"","code":"# S3 method for AMMI fitted(object, ...)"},{"path":"/reference/fitted.AMMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values. — fitted.AMMI","text":"object object class AMMI ... used.","code":""},{"path":"/reference/fitted.AMMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values. — fitted.AMMI","text":"data.frame fitted values.","code":""},{"path":[]},{"path":"/reference/fitted.AMMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fitted values. — fitted.AMMI","text":"","code":"## Run AMMI analysis on TDMaize. geAmmi <- gxeAmmi(TD = TDMaize, trait = \"yld\")  ## Extract fitted values. fitAmmi <- fitted(geAmmi) head(fitAmmi) #>   genotype trial fittedValue #> 1     G001 HN96b    602.9904 #> 2     G002 HN96b    386.4668 #> 3     G003 HN96b    557.0535 #> 4     G004 HN96b    335.6527 #> 5     G005 HN96b    493.7241 #> 6     G006 HN96b    433.7480"},{"path":"/reference/fitted.FW.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values. — fitted.FW","title":"Extract fitted values. — fitted.FW","text":"Extract fitted values fitted Finlay-Wilkinson model.","code":""},{"path":"/reference/fitted.FW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values. — fitted.FW","text":"","code":"# S3 method for FW fitted(object, ...)"},{"path":"/reference/fitted.FW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values. — fitted.FW","text":"object object class FW ... used.","code":""},{"path":"/reference/fitted.FW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values. — fitted.FW","text":"data.frame fitted values.","code":""},{"path":[]},{"path":"/reference/fitted.FW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fitted values. — fitted.FW","text":"","code":"## Run Finlay-Wilkinson analysis. geFW <- gxeFw(TD = TDMaize, trait = \"yld\")  ## Extract fitted values. fitFW <- fitted(geFW) head(fitFW) #>   trial genotype fittedValue seFittedValue #> 1 HN96b     G001   542.08526      36.14586 #> 2 IS92a     G001   735.82041      43.17100 #> 3 IS94a     G001   467.08089      36.28094 #> 4 LN96a     G001   175.25296      50.51774 #> 5 LN96b     G001    59.50501      59.74921 #> 6 NS92a     G001  1246.54831      85.77821"},{"path":"/reference/fitted.varCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values. — fitted.varCov","title":"Extract fitted values. — fitted.varCov","text":"Extract fitted values object class varCov.","code":""},{"path":"/reference/fitted.varCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values. — fitted.varCov","text":"","code":"# S3 method for varCov fitted(object, ...)"},{"path":"/reference/fitted.varCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values. — fitted.varCov","text":"object object class varCov ... used.","code":""},{"path":"/reference/fitted.varCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values. — fitted.varCov","text":"data.frame fitted values.","code":""},{"path":[]},{"path":"/reference/fitted.varCov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fitted values. — fitted.varCov","text":"","code":"# \\donttest{ if (requireNamespace(\"asreml\", quietly = TRUE)) {   ## Select the best variance-covariance model using asreml for modeling.   geVarCov <- gxeVarCov(TD = TDMaize, trait = \"yld\", engine = \"asreml\")   ## Extract fitted values from the model.    fitVarCov <- fitted(geVarCov)   head(fitVarCov)   } # }"},{"path":"/reference/gxeAmmi.html","id":null,"dir":"Reference","previous_headings":"","what":"AMMI analysis — gxeAmmi","title":"AMMI analysis — gxeAmmi","text":"Additive Main Effects Multiplicative Interaction (AMMI) model fits model involves Additive Main effects (.e. genotype trial) along Multiplicative Interaction effects. additive effects classical ANOVA main effects genotype environment, multiplicative effects follow principal component analysis interaction residuals (= genotype environment means adjustment additive genotype environment effects). results interaction characterized Interaction Principal Components (IPCA) enabling simultaneous plotting genotypes trials. parameter nPC used indicate number principal components used principal component analysis (PCA). setting parameter NULL algorithm determines best number principal components (see Details). specifying parameter byYear = TRUE, separate analysis done every year data. Combining option nPC = NULL may result different numbers principal components per year. AMMI estimates still returned single data.frame, results either lists arrays.","code":""},{"path":"/reference/gxeAmmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AMMI analysis — gxeAmmi","text":"","code":"gxeAmmi(   TD,   trials = names(TD),   trait,   nPC = 2,   byYear = FALSE,   center = TRUE,   excludeGeno = NULL,   useWt = FALSE )"},{"path":"/reference/gxeAmmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AMMI analysis — gxeAmmi","text":"TD object class TD. trials character string specifying trials analyzed. supplied, trials used analysis. trait character string specifying trait analyzed. nPC integer specifying number principal components used multiplicative term genotype--trial interaction. NULL, number principal components determined algorithm using forward selection. See details. byYear analysis done year? TRUE data split variable year, analysis performed results merged together returned. center variables shifted zero centered? excludeGeno optional character vector names genotypes excluded analysis. NULL, genotypes used. useWt weighting used modeling? Requires column wt TD.","code":""},{"path":"/reference/gxeAmmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AMMI analysis — gxeAmmi","text":"object class AMMI, list containing: envScores matrix environmental scores. genoScores matrix genotypic scores. importance data.frame containing importance principal components. anova data.frame containing anova scores AMMI analysis. fitted data.frame containing fitted values AMMI model. trait character string containing analyzed trait. envMean numerical vector containing environmental means. genoMean numerical vector containing genotypic means. overallMean numerical value containing overall mean. byYear = TRUE, returned items AMMI object except fitted consist list results year.","code":""},{"path":"/reference/gxeAmmi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AMMI analysis — gxeAmmi","text":"First linear model \\(trait = genotype + trial + \\epsilon\\) fitted genotype trial fixed components model. residuals fitted model used PCA. nPC NULL single PCA done using prcomp maximum rank nPC. case nPC = NULL, PCA first done one PC. using forward selection one one number PCs increased long added component significant analysis. AMMI estimates computed using results PCA.","code":""},{"path":"/reference/gxeAmmi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"AMMI analysis — gxeAmmi","text":"Gauch H.G. (1992) Statistical Analysis Regional Yield Trials: AMMI Analysis Factorial Designs. Elsevier, Amsterdam. Yan, W., Kang, M. (2002). GGE Biplot Analysis. Boca Raton: CRC Press.","code":""},{"path":[]},{"path":"/reference/gxeAmmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AMMI analysis — gxeAmmi","text":"","code":"## Run AMMI analysis on TDMaize. geAmmi <- gxeAmmi(TD = TDMaize, trait = \"yld\")  ## Summarize results. summary(geAmmi) #> Principal components  #> ==================== #>                              PC1       PC2 #> Standard deviation     161.12397 136.06980 #> Proportion of Variance   0.29796   0.21250 #> Cumulative Proportion    0.29796   0.51046 #>  #> Anova  #> ===== #> Analysis of Variance Table #>  #> Response: yld #>                Df    Sum Sq  Mean Sq   F value    Pr(>F)     #> Trial           7 127771687 18253098 1466.4731 < 2.2e-16 *** #> Genotype      210  13821018    65814    5.2876 < 2.2e-16 *** #> Interactions 1470  18296997    12447                         #> PC1           216   5451796    25240    2.9306 < 2.2e-16 *** #> PC2           214   3888148    18169    2.1096  1.31e-14 *** #> Residuals    1040   8957053     8613                         #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Environment scores  #> ================== #>               PC1        PC2 #> HN96b -0.19530892  0.7066260 #> IS92a  0.15345251 -0.3083436 #> IS94a  0.01300981 -0.3578091 #> LN96a -0.25229650  0.1268734 #> LN96b -0.35806958  0.1276750 #> NS92a  0.85058379  0.2513096 #> SS92a -0.09087845 -0.4011956 #> SS94a -0.12049264 -0.1451358  ## Create a biplot of genotypes and environment interaction with PC1 and PC2. plot(geAmmi, plotType = \"AMMI2\")   ## Create a pdf report summarizing the results. # \\donttest{ report(geAmmi, outfile = tempfile(fileext = \".pdf\")) #> Error in report.AMMI(geAmmi, outfile = tempfile(fileext = \".pdf\")): An installation of LaTeX is required to create a pdf report. # }"},{"path":"/reference/gxeFw.html","id":null,"dir":"Reference","previous_headings":"","what":"Finlay-Wilkinson analysis — gxeFw","title":"Finlay-Wilkinson analysis — gxeFw","text":"function performs Finlay-Wilkinson analysis data classified two factors.","code":""},{"path":"/reference/gxeFw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finlay-Wilkinson analysis — gxeFw","text":"","code":"gxeFw(   TD,   trials = names(TD),   trait,   maxIter = 15,   tol = 0.001,   sorted = c(\"descending\", \"ascending\", \"none\"),   genotypes = NULL,   useWt = FALSE )"},{"path":"/reference/gxeFw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finlay-Wilkinson analysis — gxeFw","text":"TD object class TD. trials character string specifying trials analyzed. supplied, trials used analysis. trait character string specifying trait analyzed. maxIter integer specifying maximum number iterations algorithm. tol positive numerical value specifying convergence tolerance algorithm. sorted character string specifying sorting order estimated values output. genotypes optional character string containing genotypes analysis restricted. NULL, genotypes used. useWt weighting used modeling? Requires column wt TD.","code":""},{"path":"/reference/gxeFw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finlay-Wilkinson analysis — gxeFw","text":"object class FW, list containing: estimates data.frame containing estimated values, following columns: genotype name genotype. sens estimate sensitivity. se_sens standard error estimate sensitivity. genMean estimate genotypic mean. se_genMean standard error estimate genotypic mean. MSdeviation mean square deviation line fitted genotype rank rank genotype based sensitivity. anova data.frame containing anova scores FW analysis. envEffs data.frame containing environmental effects, following columns: trial name trial. envEff estimate environment effect. se_envEff standard error estimate environment effect. envMean estimate environment mean. rank rank trial based mean. TD object class TD analysis performed. fittedGeno numerical vector containing fitted values genotypes. trait character string containing analyzed trait. nGeno numerical value containing number genotypes analysis. nEnv numerical value containing number environments analysis. tol numerical value containing tolerance used analysis. iter numerical value containing number iterations analysis converge.","code":""},{"path":"/reference/gxeFw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Finlay-Wilkinson analysis — gxeFw","text":"Finlay, K.W. & Wilkinson, G.N. (1963). analysis adaptation plant-breeding programme. Australian Journal Agricultural Research, 14, 742-754.","code":""},{"path":[]},{"path":"/reference/gxeFw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finlay-Wilkinson analysis — gxeFw","text":"","code":"## Run Finlay-Wilkinson analysis on TDMaize. geFW <- gxeFw(TDMaize, trait = \"yld\")  ## Summarize results. summary(geFW) #> Environmental effects  #> ===================== #>   Trial     EnvEff SE_EnvEff    EnvMean SE_EnvMean Rank #> 1 HN96b   25.60907  8.035738  481.78976   36.14586    3 #> 2 IS92a  182.25399  8.035738  638.43455   43.17100    2 #> 3 IS94a  -35.03586  8.035738  421.14488   36.28094    4 #> 4 LN96a -270.99389  8.035738  185.18705   50.51774    7 #> 5 LN96b -364.58211  8.035738   91.59891   59.74921    8 #> 6 NS92a  595.20401  8.035738 1051.38422   85.77821    1 #> 7 SS92a  -88.89550  8.035738  367.28528   37.82240    6 #> 8 SS94a  -43.55972  8.035738  412.62103   36.43859    5 #>  #> Anova  #> ===== #>                 Df    Sum Sq  Mean Sq   F value    Pr(>F)     #> Trial            7 127771687 18253098 1753.1259 < 2.2e-16 *** #> Genotype       210  13821018    65814    6.3212 < 2.2e-16 *** #> Sensitivities  210   5178199    24658    2.3683 < 2.2e-16 *** #> Residual      1260  13118797    10412                         #> Total         1687 159889702    94778                         #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Most sensitive genotypes #> ======================== #>  Genotype  GenMean SE_GenMean Rank     Sens   SE_Sens MSdeviation #>      G091 510.4500   35.99027    1 1.440517 0.1308168    6109.574 #>      G194 521.4250   35.99027    2 1.427586 0.1308168    4836.093 #>      G055 616.8500   35.99027    3 1.418635 0.1308168    7160.220 #>      G042 561.3875   35.99027    4 1.397186 0.1308168   18919.353 #>      G103 510.8000   35.99027    5 1.389816 0.1308168    9408.329  ## Create a scatterplot of the results. plot(geFW, plotType = \"scatter\")   # \\donttest{ ## Create a report summarizing the results. report(geFW, outfile = tempfile(fileext = \".pdf\")) #> Error in report.FW(geFW, outfile = tempfile(fileext = \".pdf\")): An installation of LaTeX is required to create a pdf report. # }"},{"path":"/reference/gxeGGE.html","id":null,"dir":"Reference","previous_headings":"","what":"GGE analysis — gxeGGE","title":"GGE analysis — gxeGGE","text":"Genotype plus Genotype Environment interaction (GGE) model fits model trial main fixed effect. principal component analysis done residuals. results interaction characterized Interaction Principal Components (IPCA) enabling simultaneous plotting genotypes trials. parameter nPC used indicate number principal components used principal component analysis (PCA). setting parameter NULL algorithm determines best number principal components (see Details). specifying parameter byYear = TRUE, separate analysis done every year data. Combining option nPC = NULL may result different numbers principal components per year. GGE estimates still returned single data.frame, results either lists arrays.","code":""},{"path":"/reference/gxeGGE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GGE analysis — gxeGGE","text":"","code":"gxeGGE(   TD,   trials = names(TD),   trait,   nPC = 2,   byYear = FALSE,   center = TRUE,   excludeGeno = NULL,   useWt = FALSE )"},{"path":"/reference/gxeGGE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GGE analysis — gxeGGE","text":"TD object class TD. trials character string specifying trials analyzed. supplied, trials used analysis. trait character string specifying trait analyzed. nPC integer specifying number principal components used multiplicative term genotype--trial interaction. NULL, number principal components determined algorithm using forward selection. See details. byYear analysis done year? TRUE data split variable year, analysis performed results merged together returned. center variables shifted zero centered? excludeGeno optional character vector names genotypes excluded analysis. NULL, genotypes used. useWt weighting used modeling? Requires column wt TD.","code":""},{"path":"/reference/gxeGGE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GGE analysis — gxeGGE","text":"First linear model \\(trait = trial + \\epsilon\\) fitted trial fixed component model. residuals fitted model used PCA. nPC NULL single PCA done using prcomp maximum rank nPC. case nPC = NULL, PCA first done one PC. using forward selection one one number PCs increased long added component significant analysis. GGE estimates computed using results PCA.","code":""},{"path":"/reference/gxeMegaEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Form mega environments based on fitted values from an AMMI model — gxeMegaEnv","title":"Form mega environments based on fitted values from an AMMI model — gxeMegaEnv","text":"function fits AMMI model using fitted values produces new factor clustering trials. factor added column megaEnv input data. column megaEnv already exists column overwritten warning. Mega environments created grouping environments based best performing genotype; .e. environments share best genotype belong mega environment.","code":""},{"path":"/reference/gxeMegaEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Form mega environments based on fitted values from an AMMI model — gxeMegaEnv","text":"","code":"gxeMegaEnv(   TD,   trials = names(TD),   trait,   method = c(\"max\", \"min\"),   byYear = FALSE )"},{"path":"/reference/gxeMegaEnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Form mega environments based on fitted values from an AMMI model — gxeMegaEnv","text":"TD object class TD. trials character string specifying trials analyzed. supplied, trials used analysis. trait character string specifying trait analyzed. method character string indicating criterion determine best genotype per environment, either \"max\" \"min\". byYear analysis done year? TRUE data split variable year, analysis performed results merged together returned.","code":""},{"path":"/reference/gxeMegaEnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Form mega environments based on fitted values from an AMMI model — gxeMegaEnv","text":"object class megaEnv, list consisting TD object class TD, TD object used input function extra column megaEnv. summTab data.frame, summary table containing information trials mega environment. trait trait used calculating mega environments.","code":""},{"path":"/reference/gxeMegaEnv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Form mega environments based on fitted values from an AMMI model — gxeMegaEnv","text":"Atlin, G. N., R. J. Baker, K. B. McRae, X. Lu. 2000. Selection Response Subdivided Target Regions. Crop Sci. 40:7-13. doi:10.2135/cropsci2000.4017","code":""},{"path":[]},{"path":"/reference/gxeMegaEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Form mega environments based on fitted values from an AMMI model — gxeMegaEnv","text":"","code":"## Calculate mega environments for TDMaize. gemegaEnv <- gxeMegaEnv(TD = TDMaize, trait = \"yld\")  ## Calculate new mega environments based on the genotypes with the lowest ## value per environment. gemegaEnv2 <- gxeMegaEnv(TD = TDMaize, trait = \"yld\", method = \"min\")"},{"path":"/reference/gxeStability.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate stability coefficients for genotype-by-environment data — gxeStability","title":"Calculate stability coefficients for genotype-by-environment data — gxeStability","text":"function calculates different measures stability, cultivar-superiority measure Lin & Binns (1988), Shukla's (1972) stability variance Wricke's (1962) ecovalence.","code":""},{"path":"/reference/gxeStability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate stability coefficients for genotype-by-environment data — gxeStability","text":"","code":"gxeStability(   TD,   trials = names(TD),   trait,   method = c(\"superiority\", \"static\", \"wricke\"),   bestMethod = c(\"max\", \"min\"),   sorted = c(\"descending\", \"ascending\", \"none\") )"},{"path":"/reference/gxeStability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate stability coefficients for genotype-by-environment data — gxeStability","text":"TD object class TD. trials character string specifying trials analyzed. supplied, trials used analysis. trait character string specifying trait analyzed. method character vector specifying measures stability calculated. Options \"superiority\" (cultivar-superiority measure), \"static\" (Shukla's stability variance) \"wricke\" (wricke's ecovalence). bestMethod character string specifying criterion define best genotype. Either \"max\" \"min\". sorted character string specifying sorting order results.","code":""},{"path":"/reference/gxeStability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate stability coefficients for genotype-by-environment data — gxeStability","text":"object class stability, list containing: superiority data.frame containing values cultivar-superiority measure Lin Binns. static data.frame containing values Shukla's stability variance. wricke data.frame containing values Wricke's ecovalence. trait character string indicating trait analyzed.","code":""},{"path":"/reference/gxeStability.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate stability coefficients for genotype-by-environment data — gxeStability","text":"Lin, C. S. Binns, M. R. 1988. superiority measure cultivar performance cultivar x location data. Can. J. Plant Sci. 68: 193-198 Shukla, G.K. 1972. statistical aspects partitioning genotype-environmental components variability. Heredity 29:237-245 Wricke, G. Uber eine method zur erfassung der okologischen streubreit feldversuchen. Zeitschrift für Pflanzenzucht, v. 47, p. 92-96, 1962","code":""},{"path":[]},{"path":"/reference/gxeStability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate stability coefficients for genotype-by-environment data — gxeStability","text":"","code":"## Compute three stability measures for TDMaize. geStab <- gxeStability(TD = TDMaize, trait = \"yld\")  ## Summarize results. summary(geStab) #>  #> Cultivar-superiority measure (Top 10 % genotypes) #>  Genotype     Mean Superiority #>      G118 226.8275    213285.9 #>      G076 251.9900    188640.3 #>      G113 248.1250    185923.6 #>      G140 268.2125    181521.7 #>      G180 273.3250    179532.3 #>      G073 275.3838    173008.6 #>      G133 311.3375    165407.6 #>      G112 321.4125    156828.7 #>      G041 367.7250    153098.9 #>      G008 326.6000    152794.6 #>      G017 310.5500    149955.2 #>      G090 316.5625    147096.2 #>      G021 321.4625    147089.7 #>      G004 321.4250    145401.7 #>      G143 327.2750    142009.5 #>      G139 335.4875    140698.0 #>      G111 341.4250    139488.0 #>      G126 344.0288    139351.6 #>      G038 331.5750    139067.9 #>      G095 334.0500    137072.9 #>      G174 344.5500    136538.3 #>      G211 349.0625    135962.9 #>  #> Static stability (Top 10 % genotypes) #>  Genotype     Mean   Static #>      G042 561.3875 185082.7 #>      G091 510.4500 184739.4 #>      G194 521.4250 180439.8 #>      G055 616.8500 180228.1 #>      G061 585.7500 179620.2 #>      G103 510.8000 175153.7 #>      G130 601.4000 163529.5 #>      G192 676.1375 163323.5 #>      G028 663.5625 159318.6 #>      G037 489.1250 158294.3 #>      G145 490.1750 157766.5 #>      G172 553.3750 156891.8 #>      G047 448.2125 156613.1 #>      G009 435.2000 154190.1 #>      G105 522.5500 152883.7 #>      G019 743.8250 152822.0 #>      G150 415.9125 151083.5 #>      G168 584.1000 149636.8 #>      G025 573.1375 149223.8 #>      G082 539.0750 149223.6 #>      G110 503.7375 147909.1 #>      G117 449.1000 146968.8 #>  #> Wricke's ecovalence (Top 10 % genotypes) #>  Genotype     Mean   Wricke #>      G041 367.7250 421753.2 #>      G028 663.5625 225014.0 #>      G042 561.3875 207410.2 #>      G133 311.3375 199560.4 #>      G176 440.2000 187066.1 #>      G061 585.7500 186751.7 #>      G118 226.8275 183468.1 #>      G009 435.2000 182984.1 #>      G198 561.0750 182165.8 #>      G114 468.2500 179699.9 #>      G172 553.3750 174196.6 #>      G045 606.2000 173102.0 #>      G117 449.1000 172092.7 #>      G008 326.6000 170986.0 #>      G047 448.2125 170352.2 #>      G112 321.4125 168838.3 #>      G128 397.6375 157048.9 #>      G091 510.4500 155332.5 #>      G032 523.1375 152330.9 #>      G077 560.8250 151845.0 #>      G055 616.8500 150406.8 #>      G086 452.3000 150102.7  ## Create plot of the computed stability measures against the means. plot(geStab)   # \\donttest{ ## Create a .pdf report summarizing the stability measures. report(geStab, outfile = tempfile(fileext = \".pdf\")) #> Error in report.stability(geStab, outfile = tempfile(fileext = \".pdf\")): An installation of LaTeX is required to create a pdf report. # }  ## Compute Wricke's ecovalance for TDMaize with minimal values for yield as ## the best values. Sort results in ascending order. geStab2 <- gxeStability(TD = TDMaize, trait = \"yld\", method = \"wricke\",                        bestMethod = \"min\", sorted = \"ascending\") summary(geStab2) #>  #> Wricke's ecovalence (Top 10 % genotypes) #>  Genotype     Mean   Wricke #>      G163 412.3125 10758.99 #>      G190 470.6250 12696.93 #>      G031 452.5750 13639.19 #>      G138 358.8750 15972.32 #>      G011 393.5125 16547.87 #>      G049 434.9625 22109.51 #>      G196 435.7000 22397.20 #>      G040 393.7750 23161.62 #>      G066 508.8500 23535.07 #>      G173 358.7250 23986.23 #>      G022 432.9000 25195.53 #>      G057 466.2875 25888.58 #>      G132 438.5000 27982.65 #>      G003 474.9250 28050.84 #>      G164 485.9625 29212.43 #>      G052 449.0000 29389.23 #>      G098 383.3625 29967.63 #>      G188 380.5125 30302.95 #>      G072 499.4875 30894.87 #>      G070 410.7875 31783.30 #>      G063 436.0875 32108.69 #>      G015 353.7750 33050.07"},{"path":"/reference/gxeVarComp.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixed model analysis of GxE table of means — gxeVarComp","title":"Mixed model analysis of GxE table of means — gxeVarComp","text":"function fits mixed model best fitting data TD object. exact model fitted determined structure genotype environment table observations chosen parameters. Six different types models can fitted depending structure environments data. models described table , together function parameters used gxeVarComp fit model. models random part model printed bold. data form GxE means, last random term models become residual term. GxE means provided together weights, residual term added models . function first fits model model terms included fixed terms. Based ANOVA table model, terms fixed part model likely give problem fitting mixed model removed reduced connectivity number available observations estimate model term. Also warning printed mean sum squares model term points possible zero variance component mixed model. model fitted model terms included random terms. Based variance components model percentage variance explained model components determined. percentages variance printed model summary, together variance components. latter presented standard deviation scale. Finally mixed model fitted specified overview . Based mixed model variance components can computed using vc, heritabilies can computed using herit predictions can made using predict.varComp. Predictions genotypic performance can made level individual trials, groups trials using predictLevel.","code":""},{"path":"/reference/gxeVarComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixed model analysis of GxE table of means — gxeVarComp","text":"","code":"gxeVarComp(   TD,   trials = names(TD),   trait,   engine = c(\"lme4\", \"asreml\"),   locationYear = FALSE,   nestingFactor = NULL,   regionLocationYear = FALSE,   useWt = FALSE,   diagnostics = FALSE )"},{"path":"/reference/gxeVarComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixed model analysis of GxE table of means — gxeVarComp","text":"TD object class TD. trials character string specifying trials analyzed. supplied, trials used analysis. trait character string specifying trait analyzed. engine character string specifying engine used modeling. Either \"lme4\" \"asreml\". locationYear model fitted assuming factorial structure locations x years? nestingFactor character string specifying column TD specifying nesting structure trials. regionLocationYear model fitted assuming locations within regions across years? useWt model fitted using weights? requires column wt data. useWt = FALSE, default, data contains replicates, last model term dropped used homogeneous residual. diagnostics diagnostics missing combinations model variables printed?","code":""},{"path":"/reference/gxeVarComp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixed model analysis of GxE table of means — gxeVarComp","text":"object class varComp, list containing: fitMod fitted model. modDat data.frame containing data used fitting model. nestingFactor name variable used nesting variable model. useLocYear boolean specifying model containing location x year interaction fitted. fullRandVC data.frame containing variance components fully random model. aovFullMixedMod data.frame containing ANOVA table fully fixed model. engine engine used fitting model. diagTabs list data.frame, one random model term, containing missing combinations data term.","code":""},{"path":[]},{"path":"/reference/gxeVarComp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixed model analysis of GxE table of means — gxeVarComp","text":"","code":"## Fit a mixed model. geVarComp <- gxeVarComp(TD = TDMaize, trait = \"yld\")  ## Summarize results. summary(geVarComp) #> Fitted model formula final mixed model #>  #>  yld ~ trial + (1 | genotype)  #>  #> Sources of variation for fully random model: #>  yld ~ (1 | trial) + (1 | genotype)  #>  #>           Component % Variance expl. #> trial      86448.61          81.89 % #> genotype    6670.93           6.32 % #> residuals  12446.94          11.79 % #>  #> Analysis of Variance Table for fully fixed model: #>  yld ~ trial + genotype  #>  #>             Df    Sum Sq  Mean Sq   F value    Pr(>F)     #> trial        7 127771687 18253098 1466.4731 < 2.2e-16 *** #> genotype   210  13821018    65814    5.2876 < 2.2e-16 *** #> residuals 1470  18296997    12447                         #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ## Plot the standard deviations. plot(geVarComp)   ## Generate predictions pred <- predict(geVarComp, predictLevel = \"trial\") head(pred) #>   genotype trial predictedValue #> 1     G001 HN96b       529.1555 #> 2     G002 HN96b       508.8126 #> 3     G003 HN96b       500.3794 #> 4     G004 HN96b       375.9096 #> 5     G005 HN96b       495.8588 #> 6     G006 HN96b       454.9297"},{"path":"/reference/gxeVarCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects the best variance-covariance model for a set of trials — gxeVarCov","title":"Selects the best variance-covariance model for a set of trials — gxeVarCov","text":"function selects best covariance structure genetic correlations trials. fits range variance-covariance models (identity, compound symmetry (cs), diagonal, simple correlation heterogeneous variance (outside), heterogeneous compound symmetry (hcs), first order factor analytic (fa), second order factor analytic (fa2) unstructured), selects best one using goodness--fit criterion. See details exact models fitted.","code":""},{"path":"/reference/gxeVarCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects the best variance-covariance model for a set of trials — gxeVarCov","text":"","code":"gxeVarCov(   TD,   trials = names(TD),   trait,   models = c(\"identity\", \"cs\", \"diagonal\", \"hcs\", \"outside\", \"fa\", \"fa2\", \"unstructured\"),   engine = c(\"lme4\", \"asreml\"),   criterion = c(\"BIC\", \"AIC\"),   ... )"},{"path":"/reference/gxeVarCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects the best variance-covariance model for a set of trials — gxeVarCov","text":"TD object class TD. trials character string specifying trials analyzed. supplied, trials used analysis. trait character string specifying trait analyzed. models character vector specifying models fitted. engine character string specifying engine used modeling. Either \"lme4\" \"asreml\". criterion string specifying goodness--fit criterion. Either \"AIC\" \"BIC\". ... arguments passed modeling engine.","code":""},{"path":"/reference/gxeVarCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects the best variance-covariance model for a set of trials — gxeVarCov","text":"object class varCov, list object containing: STA object class STA containing best fitted model. choice character string indicating best fitted model. summary data.frame summary fitted models. vcov covariance matrix best fitted model. criterion character string indicating goodness--fit criterion used determining best model, either \"AIC\" \"BIC\". engine character string containing engine used analysis. trait character string containing trait analyzed. dat data.frame full data set used analysis.","code":""},{"path":"/reference/gxeVarCov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Selects the best variance-covariance model for a set of trials — gxeVarCov","text":"models fitted form \\(y_{ij} = \\mu_j + \\epsilon_{ij}\\), \\(y_{ij}\\) phenotypic value genotype \\(\\) environment \\(j\\), \\(\\mu_j\\) environmental mean, \\(\\epsilon_{ij}\\) represents mainly genetic variation, although non-genetic variation may included well. random term \\(\\epsilon_{ij}\\) modeled eight ways described table . table \\(J\\) number environments, \\(\\sigma_G^2\\) variance component genotype main effects, \\(\\sigma_{GE}^2\\) variance component GxE interactions. \\(\\sigma_{G_j}^2\\) \\(\\sigma_{GE_j}^2\\) environment specific variance components genotype main effects GxE interaction environment \\(j\\). \\(\\sigma_{G_{j,k}}^2\\) genetic covariance environments \\(j\\) \\(k\\). \\(\\theta\\) common correlation environments \\(\\lambda_{1j}\\) \\(\\lambda_{2j}\\) environment specific multiplicative parameters.","code":""},{"path":"/reference/gxeVarCov.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Selects the best variance-covariance model for a set of trials — gxeVarCov","text":"engine = \"lme4\", compound symmetry model can fitted.","code":""},{"path":[]},{"path":"/reference/gxeVarCov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Selects the best variance-covariance model for a set of trials — gxeVarCov","text":"","code":"## Select the best variance-covariance model using lme4 for modeling. geVarCov <- gxeVarCov(TD = TDMaize, trait = \"yld\")  ## Summarize results. summary(geVarCov) #> Best model: cs, based on BIC. #>  #>         AIC      BIC Deviance NParameters #> cs 21005.28 21016.14 21001.28           2  # \\donttest{ ## Create a pdf report summarizing the results. report(geVarCov, outfile = tempfile(fileext = \".pdf\")) #> Error in report.varCov(geVarCov, outfile = tempfile(fileext = \".pdf\")): An installation of LaTeX is required to create a pdf report. # }  # \\donttest{ if (requireNamespace(\"asreml\", quietly = TRUE)) {   ## Select the best variance-covariance model using asreml for modeling.   ## Use BIC as a goodness-of-fit criterion.   geVarCov2 <- gxeVarCov(TD = TDMaize, trait = \"yld\", engine = \"asreml\",                          criterion = \"BIC\")    summary(geVarCov2)    ## Plot a heatmap of the correlation matrix for the best model.   plot(geVarCov2)   } # }"},{"path":"/reference/herit.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate heritability — herit","title":"Calculate heritability — herit","text":"Calculate heritability based fitted model. heritability calculated described Atlin et al. E.g. model trials nested within locations, random part looks like : genotype + genotype:location + genotype:location:trial heritability computed $$\\sigma_G^2 / (\\sigma_G^2 + \\sigma_L^2 / l + \\sigma_{LT}^2 / lt + \\sigma_E^2 / ltr)$$ formula \\(\\sigma\\) terms stand standard deviations respective model terms, lower case letters number levels respective model terms. \\(\\sigma_L\\) standard deviation location term model \\(l\\) number locations. \\(\\sigma_E\\) corresponds residual standard deviation \\(r\\) number replicates.","code":""},{"path":"/reference/herit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate heritability — herit","text":"","code":"herit(varComp)"},{"path":"/reference/herit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate heritability — herit","text":"varComp object class varComp.","code":""},{"path":"/reference/herit.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate heritability — herit","text":"Atlin, G. N., Baker, R. J., McRae, K. B., & Lu, X. (2000). Selection response subdivided target regions. Crop Science, 40(1), 7–13. doi:10.2135/cropsci2000.4017","code":""},{"path":[]},{"path":"/reference/herit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate heritability — herit","text":"","code":"## Fit a mixed model. geVarComp <- gxeVarComp(TD = TDMaize, trait = \"yld\")  ## Compute heritability. herit(geVarComp) #> [1] 0.3489369"},{"path":"/reference/megaEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 class megaEnv — megaEnv","title":"S3 class megaEnv — megaEnv","text":"Function creating objects S3 class megaEnv.print, summary, plot report methods available.","code":""},{"path":"/reference/megaEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 class megaEnv — megaEnv","text":"","code":"createMegaEnv(TD, summTab, trait)"},{"path":"/reference/megaEnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 class megaEnv — megaEnv","text":"TD data.frame containing values cultivar-superiority measure Lin Binns. summTab data.frame containing values Shukla's stability variance. trait character string indicating trait analyzed.","code":""},{"path":[]},{"path":"/reference/multMissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate missing values in multivariate data — multMissing","title":"Estimate missing values in multivariate data — multMissing","text":"function estimates missing values units multivariate dataset, using iterative regression technique.","code":""},{"path":"/reference/multMissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate missing values in multivariate data — multMissing","text":"","code":"multMissing(Y, maxIter = 10, naStrings = NULL)"},{"path":"/reference/multMissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate missing values in multivariate data — multMissing","text":"Y matrix, data.frame vector multivariate data. maxIter integer specifying maximum number iterations. naStrings character vector strings interpreted NA values.","code":""},{"path":"/reference/multMissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate missing values in multivariate data — multMissing","text":"object class input Y missing values replaced estimates.","code":""},{"path":"/reference/multMissing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate missing values in multivariate data — multMissing","text":"Initial estimates missing values variate formed variate means using values units missing values variate. Estimates missing values variate recalculated fitted values multiple regression variate variates. missing values estimated variate means recalculated. means differs previous mean tolerance (initial standard error divided 1000) process repeated, subject maximum number repetitions defined maxIter option. default maximum number iterations (10) usually sufficient missing values, say two three. many , 20 , may necessary increase maximum number iterations around 30. method similar Orchard & Woodbury (1972), adjust bias variance-covariance matrix suggested Beale & Little (1975).","code":""},{"path":"/reference/multMissing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate missing values in multivariate data — multMissing","text":"Beale, E.M.L. & Little, R.J.. (1975). Missing values multivariate analysis. Journal Royal Statistical Society, Series B, 37, 129-145. Orchard, T. & Woodbury, M.. (1972). missing information principle: theory applications. : Proceedings 6th Berkeley Symposium Mathematical Statistics Probability, Vol , 697-715.","code":""},{"path":"/reference/multMissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate missing values in multivariate data — multMissing","text":"","code":"M <- matrix(c(\"1\", \"2\", \"3\", NA, \"b\", \"5\", \"6\",               \"6\", \"5\", \"b\", NA, \"3\", \"2\", \"1\"), nrow = 7, ncol = 2)  ## Estimate missing values treating \"b\" as NA. multMissing(M, naStrings = \"b\") #>          [,1]     [,2] #> [1,] 1.000000 6.000000 #> [2,] 2.000000 5.000000 #> [3,] 3.000000 3.999972 #> [4,] 3.499975 3.499995 #> [5,] 3.999851 3.000000 #> [6,] 5.000000 2.000000 #> [7,] 6.000000 1.000000"},{"path":"/reference/plot.AMMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class AMMI — plot.AMMI","title":"Plot function for class AMMI — plot.AMMI","text":"Two types biplot can made. plot genotype environment means vs PC1 (AMMI1) biplot genotypes environment interaction PC1 PC2 (AMMI2). AMMI analysis done year, separate plot made every year data. years number principal components may lower number specified secondary axis. case year skipped plotting. happens years function returns error.","code":""},{"path":"/reference/plot.AMMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class AMMI — plot.AMMI","text":"","code":"# S3 method for AMMI plot(   x,   ...,   plotType = c(\"AMMI1\", \"AMMI2\", \"GGE2\"),   scale = 1,   plotGeno = TRUE,   colorGenoBy = NULL,   colGeno = NULL,   sizeGeno = 0,   plotConvHull = FALSE,   plotEnv = TRUE,   colorEnvBy = NULL,   colEnv = NULL,   sizeEnv = 3,   envFactor = 1,   primAxis = \"PC1\",   secAxis = \"PC2\",   rotatePC = NULL,   title = NULL,   output = TRUE )"},{"path":"/reference/plot.AMMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class AMMI — plot.AMMI","text":"x object class AMMI ... used. plotType character string indicating plot made. Either \"AMMI1\" AMMI1 plot (genotype environment means vs PC1) \"AMMI2\" AMMI2 biplot (genotypes environment interaction PC1 PC2) respectively. results GGE analysis GGE2 biplot can made plotType may ignored. scale numerical value. variables scaled lambda ^ scale observations lambda ^ (1 - scale) lambda singular values computed princomp gxeAmmi. Normally 0 <= scale <= 1, warning issued specified scale outside range. plotGeno genotypes plotted? colorGenoBy character string indicating column TD used input AMMI analysis genotypes colored. NULL genotypes colored black. colGeno character vector plot colors genotypes. single color colorGenoBy = NULL, vector colors otherwise. sizeGeno numerical value indicating text size plotting genotypes. Use sizeGeno = 0 plotting genotypes points instead using names. plotConvHull convex hull plotted around genotypes. TRUE convex hull plotted. GGE2 biplots lines origin plot perpendicular edges hull added. valid AMMI2 GGE2 biplots. plotEnv environments plotted? colorEnvBy character string indicating column TD used input AMMI analysis environments colored. NULL genotypes colored red. colEnv character string plot colors environments. single color colorEnvBy = NULL, vector colors otherwise. sizeEnv integer indicating text size plotting environments. envFactor positive numerical value giving factor blow environmental scores. Providing value 0 1 effectively blow genotypic scores. primAxis character string indicating principal component plotted primary axis AMMI2 plot. given \"PCn\" n number principal component. secAxis character string indicating principal component plotted secondary axis AMMI2 plot. given \"PCn\" n number principal component. n differ primAxis. rotatePC character string indicating genotype environment aligned positive x-axis plot. title character string used title plot. output plot output current device? FALSE list ggplot objects invisibly returned.","code":""},{"path":"/reference/plot.AMMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function for class AMMI — plot.AMMI","text":"biplot depending plotType. ggplot object biplot returned invisibly.","code":""},{"path":[]},{"path":"/reference/plot.AMMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class AMMI — plot.AMMI","text":"","code":"## Run AMMI analysis. geAmmi <- gxeAmmi(TD = TDMaize, trait = \"yld\")  ## Create an AMMI1 biplot. plot(geAmmi)   ## Create an AMMI2 biplot. plot(geAmmi, plotType = \"AMMI2\", scale = 0.5)   ## Create an AMMI2 biplot, with HN96b along the positive x-axis. plot(geAmmi, plotType = \"AMMI2\", scale = 0.5, rotatePC = \"HN96b\")   ## Run GGE analysis. geGGE <- gxeGGE(TD = TDMaize, trait = \"yld\")  ## Create an GGE2 biplot. ## Add a convex hull. plot(geGGE, plotType = \"GGE2\", scale = 0.5, plotConvHull = TRUE)"},{"path":"/reference/plot.FW.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class FW — plot.FW","title":"Plot function for class FW — plot.FW","text":"Four types plot can made. scatter plot genotypic mean, square root mean squared deviation sensitivity, line plot fitted lines genotype, trellis plot individual slopes per genotype scatter plot fitted values worst best trial. possible select genotypes trellis plot using genotypes parameter. 64 genotypes, first 64 plotted trellis plot.","code":""},{"path":"/reference/plot.FW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class FW — plot.FW","text":"","code":"# S3 method for FW plot(   x,   ...,   plotType = c(\"scatter\", \"line\", \"trellis\", \"scatterFit\"),   order = c(\"ascending\", \"descending\"),   response = c(\"predicted\", \"observed\"),   colorGenoBy = NULL,   colGeno = NULL,   genotypes = NULL,   title = paste(\"Finlay & Wilkinson analysis for\", x$trait),   output = TRUE )"},{"path":"/reference/plot.FW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class FW — plot.FW","text":"x object class FW. ... used. plotType character string indicating plot made. Either \"scatter\", \"line\" \"trellis\" creating scatter plot genotypic means, mse sensitivities, plot fitted lines genotype trellis plot individual genotype slopes respectively. order character string specifying whether results line plot ordered increasing (decreasing) order sensitivities. Ignored plotType \"line\". response character string specifying whether line plot \"predicted\" \"observed\" data plotted. Ignored plotType \"line\". colorGenoBy character string indicating column TD used input Finlay Wilkinson analysis genotypes colored. NULL genotypes colored differently. colGeno character vector plot colors genotypes. single color colorGenoBy = NULL, vector colors otherwise. genotypes optional character string containing genotypes plotted trellis plot. NULL genotypes plotted. 64 genotypes selected, first 64 plotted. title character string used title plot. output plot output current device? FALSE, list ggplot objects invisibly returned.","code":""},{"path":"/reference/plot.FW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function for class FW — plot.FW","text":"plot depending plotType.","code":""},{"path":[]},{"path":"/reference/plot.FW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class FW — plot.FW","text":"","code":"## Run Finlay-Wilkinson analysis. geFW <- gxeFw(TD = TDMaize, trait = \"yld\")  ## Create a scatter plot. plot(geFW)   ## Create a line plot. plot(geFW, plotType = \"line\")   ## Create a line plot showing observed data value for genotypes and fitted lines. ## Display trials in descending order. plot(geFW, plotType = \"line\", order = \"descending\", response = \"observed\")   # \\donttest{ ## Create a trellis plot. plot(geFW, plotType = \"trellis\")   ## Create a scatter plot of fitted values for the worst and best trials. plot(geFW, plotType = \"scatterFit\")  # }"},{"path":"/reference/plot.megaEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class megaEnv — plot.megaEnv","title":"Plot function for class megaEnv — plot.megaEnv","text":"Function creating scatter plots predicted values computed mega environments.","code":""},{"path":"/reference/plot.megaEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class megaEnv — plot.megaEnv","text":"","code":"# S3 method for megaEnv plot(   x,   ...,   engine = c(\"lme4\", \"asreml\"),   colorGenoBy = NULL,   title = paste(\"Scatterplot of mega environments for\", x$trait),   output = TRUE )"},{"path":"/reference/plot.megaEnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class megaEnv — plot.megaEnv","text":"x object class megaEnv. ... arguments passed underlying plot functions. engine character string specifying engine used making predictions plots based. colorGenoBy character string indicating column TD genotypes scatter plots colored. NULL genotypes displayed black. title character string used title plot. output plot output current device? FALSE ggtable object invisibly returned.","code":""},{"path":[]},{"path":"/reference/plot.megaEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class megaEnv — plot.megaEnv","text":"","code":"## Compute mega environments for TDMaize. geMegaEnv <- gxeMegaEnv(TD = TDMaize, trait = \"yld\")  ## Create a scatter plot of predicted values. plot(geMegaEnv) #> Warning: One should be cautious with the interpretation of predictions for mega environments that are based on less than 10 trials. #> boundary (singular) fit: see help('isSingular')"},{"path":"/reference/plot.stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class stability — plot.stability","title":"Plot function for class stability — plot.stability","text":"Function creating scatter plots square roots computed stability measures means.","code":""},{"path":"/reference/plot.stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class stability — plot.stability","text":"","code":"# S3 method for stability plot(   x,   ...,   colorGenoBy = NULL,   colGeno = NULL,   title = paste(\"Stability coefficients for\", x$trait),   output = TRUE )"},{"path":"/reference/plot.stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class stability — plot.stability","text":"x object class stability. ... used. colorGenoBy character string indicating column TD used input stability analysis genotypes colored. NULL genotypes colored black. colGeno character vector plot colors genotypes. single color colorGenoBy = NULL, vector colors otherwise. title character string used title plot. output plot output current device? FALSE list ggplot objects invisibly returned.","code":""},{"path":"/reference/plot.stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function for class stability — plot.stability","text":"list ggplot object invisibly returned.","code":""},{"path":[]},{"path":"/reference/plot.stability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class stability — plot.stability","text":"","code":"## Compute three stability measures for TDMaize. geStab <- gxeStability(TD = TDMaize, trait = \"yld\")  ## Create scatter plots of the computed stability measures against the means. plot(geStab)"},{"path":"/reference/plot.varComp.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class varComp — plot.varComp","title":"Plot function for class varComp — plot.varComp","text":"plot created either standard deviations terms fitted model percentage variance explained terms fitted model. Also degrees freedom terms shown plot.","code":""},{"path":"/reference/plot.varComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class varComp — plot.varComp","text":"","code":"# S3 method for varComp plot(x, ..., plotType = c(\"sd\", \"percVar\"), title = NULL, output = TRUE)"},{"path":"/reference/plot.varComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class varComp — plot.varComp","text":"x object class varComp ... used. plotType character string. Either \"sd\" plot standard deviation variance components, \"percVar\" plot percentage variance explained variance component. title character string used title plot. output plot output current device? FALSE ggplot object invisibly returned.","code":""},{"path":"/reference/plot.varComp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function for class varComp — plot.varComp","text":"ggplot object invisibly returned.","code":""},{"path":[]},{"path":"/reference/plot.varComp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class varComp — plot.varComp","text":"","code":"## Fit a mixed model. geVarComp <- gxeVarComp(TD = TDMaize, trait = \"yld\")  ## Plot the standard deviations. plot(geVarComp)  ## Plot the percentage of variance explained. plot(geVarComp, plotType = \"percVar\")"},{"path":"/reference/plot.varCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function for class varCov — plot.varCov","title":"Plot function for class varCov — plot.varCov","text":"Function plotting heatmap correlation matrix objects class varCov.","code":""},{"path":"/reference/plot.varCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function for class varCov — plot.varCov","text":"","code":"# S3 method for varCov plot(x, title = paste(\"Heatmap for model:\", x$choice), ..., output = TRUE)"},{"path":"/reference/plot.varCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function for class varCov — plot.varCov","text":"x object class varCov title character string used title plot. ... used. output plot output current device? FALSE ggplot object invisibly returned.","code":""},{"path":[]},{"path":"/reference/plot.varCov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot function for class varCov — plot.varCov","text":"","code":"# \\donttest{ if (requireNamespace(\"asreml\", quietly = TRUE)) {   ## Select the best variance-covariance model using asreml for modeling.   geVarCov <- gxeVarCov(TD = TDMaize, trait = \"yld\", engine = \"asreml\")    ## Create a heatmap of the correlation matrix for the best model.   plot(geVarCov)   } # }"},{"path":"/reference/predict.megaEnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute BLUPS based on a set of mega environments — predict.megaEnv","title":"Compute BLUPS based on a set of mega environments — predict.megaEnv","text":"function calculates Best Linear Unbiased Predictors (BLUPS) associated standard errors based set mega environments.","code":""},{"path":"/reference/predict.megaEnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute BLUPS based on a set of mega environments — predict.megaEnv","text":"","code":"# S3 method for megaEnv predict(   object,   ...,   trials = names(object$TD),   useYear = FALSE,   engine = c(\"lme4\", \"asreml\") )"},{"path":"/reference/predict.megaEnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute BLUPS based on a set of mega environments — predict.megaEnv","text":"object object class megaEnv. ... parameters passed either asreml lmer. trials character string specifying trials analyzed. supplied, trials used analysis. useYear year used modeling (years within trials). TRUE, TD contain column \"year\". engine character string specifying engine used modeling.","code":""},{"path":"/reference/predict.megaEnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute BLUPS based on a set of mega environments — predict.megaEnv","text":"list consisting two data.frames, predictedValue containing BLUPs per genotype per mega environment standardError containing standard errors BLUPs.","code":""},{"path":[]},{"path":"/reference/predict.megaEnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute BLUPS based on a set of mega environments — predict.megaEnv","text":"","code":"## Compute mega environments for TDMaize. geMegaEnv <- gxeMegaEnv(TD = TDMaize, trait = \"yld\")  ## Compute BLUPS and standard errors for those mega environments. megaEnvPred <- predict(geMegaEnv) #> Warning: One should be cautious with the interpretation of predictions for mega environments that are based on less than 10 trials. #> boundary (singular) fit: see help('isSingular') head(megaEnvPred$predictedValue) #>      megaEnv_1 megaEnv_2 megaEnv_3 #> G001  489.0515  483.5317  497.8785 #> G002  472.3096  491.5258  498.1123 #> G003  468.2102  457.0879  462.5265 #> G004  363.6653  361.1352  321.1292 #> G005  462.8374  465.0800  467.9159 #> G006  435.4026  419.0985  410.4387 head(megaEnvPred$standardError) #>      megaEnv_1 megaEnv_2 megaEnv_3 #> G001  32.09261  38.36256  45.40008 #> G002  32.09261  38.36256  45.40008 #> G003  32.09261  38.36256  45.40008 #> G004  32.09261  38.36256  45.40008 #> G005  32.09261  38.36256  45.40008 #> G006  32.09261  38.36256  45.40008"},{"path":"/reference/predict.varComp.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictions based on a fitted varComp model. — predict.varComp","title":"Predictions based on a fitted varComp model. — predict.varComp","text":"Predictions made based fitted model varComp object. predictions can genotype level, genotype x trial level level genotype x nestingFactor. model fitted trial year x location genotype x trial level becomes genotype x year x location.","code":""},{"path":"/reference/predict.varComp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictions based on a fitted varComp model. — predict.varComp","text":"","code":"# S3 method for varComp predict(object, ..., predictLevel = \"genotype\")"},{"path":"/reference/predict.varComp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictions based on a fitted varComp model. — predict.varComp","text":"object object class varComp. ... used. predictLevel character string, level prediction made. Either \"genotype\" prediction genotype level, \"trial\" predictions genotype x trial level, variable used nesting factor predictions level genotype x nestingFactor level, one extra terms used model. E.g. c(\"region\", \"year\") model fitted regionLocationYear = TRUE.","code":""},{"path":"/reference/predict.varComp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predictions based on a fitted varComp model. — predict.varComp","text":"data.frame predictions.","code":""},{"path":[]},{"path":"/reference/predict.varComp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictions based on a fitted varComp model. — predict.varComp","text":"","code":"## Fit a mixed model. geVarComp <- gxeVarComp(TD = TDMaize, trait = \"yld\")  ## Predictions at genotype level. predGeno <- predict(geVarComp) head(predGeno) #>   genotype predictedValue #> 1     G001       500.1561 #> 2     G002       479.8132 #> 3     G003       471.3800 #> 4     G004       346.9103 #> 5     G005       466.8594 #> 6     G006       425.9303  ## Predictions at genotype x trial level. predGenoTrial <- predict(geVarComp, predictLevel = \"trial\") head(predGenoTrial) #>   genotype trial predictedValue #> 1     G001 HN96b       529.1555 #> 2     G002 HN96b       508.8126 #> 3     G003 HN96b       500.3794 #> 4     G004 HN96b       375.9096 #> 5     G005 HN96b       495.8588 #> 6     G006 HN96b       454.9297"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. statgenSTA report","code":""},{"path":"/reference/report.AMMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Report method for class AMMI — report.AMMI","title":"Report method for class AMMI — report.AMMI","text":"pdf report created containing summary AMMI object. Simultaneously report created tex file.","code":""},{"path":"/reference/report.AMMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report method for class AMMI — report.AMMI","text":"","code":"# S3 method for AMMI report(x, ..., outfile = NULL)"},{"path":"/reference/report.AMMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report method for class AMMI — report.AMMI","text":"x object class AMMI. ... used. outfile character string, name location output .pdf .tex file report. NULL, report default name created current working directory.","code":""},{"path":"/reference/report.AMMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report method for class AMMI — report.AMMI","text":"pdf tex report.","code":""},{"path":[]},{"path":"/reference/report.AMMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report method for class AMMI — report.AMMI","text":"","code":"## Run AMMI analysis on TDMaize. geAmmi <- gxeAmmi(TD = TDMaize, trait = \"yld\") # \\donttest{ ## Create a pdf report summarizing the results. report(geAmmi, outfile = tempfile(fileext = \".pdf\")) #> Error in report.AMMI(geAmmi, outfile = tempfile(fileext = \".pdf\")): An installation of LaTeX is required to create a pdf report. # }"},{"path":"/reference/report.FW.html","id":null,"dir":"Reference","previous_headings":"","what":"Report method for class FW — report.FW","title":"Report method for class FW — report.FW","text":"pdf report created containing summary FW object. Simultaneously report created tex file.","code":""},{"path":"/reference/report.FW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report method for class FW — report.FW","text":"","code":"# S3 method for FW report(x, sortBy = c(\"sens\", \"genMean\", \"mse\"), ..., outfile = NULL)"},{"path":"/reference/report.FW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report method for class FW — report.FW","text":"x object class FW. sortBy character string indicating variable estimates sorted. Either sens(itivity), genMean (genotypic Mean) mse (mean squared error). ... used. outfile character string, name location output .pdf .tex file report. NULL, report default name created current working directory.","code":""},{"path":"/reference/report.FW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report method for class FW — report.FW","text":"pdf tex report.","code":""},{"path":[]},{"path":"/reference/report.FW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report method for class FW — report.FW","text":"","code":"## Run Finlay-Wilkinson analysis on TDMaize. geFW <- gxeFw(TDMaize, trait = \"yld\")  # \\donttest{ ## Create a report summarizing the results. report(geFW, outfile = tempfile(fileext = \".pdf\")) #> Error in report.FW(geFW, outfile = tempfile(fileext = \".pdf\")): An installation of LaTeX is required to create a pdf report. # }"},{"path":"/reference/report.stability.html","id":null,"dir":"Reference","previous_headings":"","what":"Report method for class stability — report.stability","title":"Report method for class stability — report.stability","text":"pdf report created containing summary object class stability. Simultaneously report created tex file.","code":""},{"path":"/reference/report.stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report method for class stability — report.stability","text":"","code":"# S3 method for stability report(x, ..., outfile = NULL)"},{"path":"/reference/report.stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report method for class stability — report.stability","text":"x object class stability. ... used. outfile character string, name location output .pdf .tex file report. NULL, report default name created current working directory.","code":""},{"path":"/reference/report.stability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report method for class stability — report.stability","text":"pdf tex report.","code":""},{"path":[]},{"path":"/reference/report.stability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report method for class stability — report.stability","text":"","code":"## Compute three stability measures for TDMaize. geStab <- gxeStability(TD = TDMaize, trait = \"yld\") # \\donttest{ ## Create a .pdf report summarizing the stability measures. report(geStab, outfile = tempfile(fileext = \".pdf\")) #> Error in report.stability(geStab, outfile = tempfile(fileext = \".pdf\")): An installation of LaTeX is required to create a pdf report. # }"},{"path":"/reference/report.varCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Report method for class varCov — report.varCov","title":"Report method for class varCov — report.varCov","text":"pdf report created containing summary object class varCov. Simultaneously report created tex file.","code":""},{"path":"/reference/report.varCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report method for class varCov — report.varCov","text":"","code":"# S3 method for varCov report(x, ..., outfile = NULL)"},{"path":"/reference/report.varCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report method for class varCov — report.varCov","text":"x object class varCov. ... used. outfile character string, name location output .pdf .tex file report. NULL, report default name created current working directory.","code":""},{"path":"/reference/report.varCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report method for class varCov — report.varCov","text":"pdf tex report.","code":""},{"path":[]},{"path":"/reference/report.varCov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report method for class varCov — report.varCov","text":"","code":"# \\donttest{ ## Select the best variance-covariance model using asreml for modeling. if (requireNamespace(\"asreml\", quietly = TRUE)) {   geVarCov <- gxeVarCov(TD = TDMaize, trait = \"yld\", engine = \"asreml\")    ## Create a pdf report summarizing the results.   report(geVarCov, outfile = tempfile(fileext = \".pdf\"))   } # }"},{"path":"/reference/residuals.AMMI.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals. — residuals.AMMI","title":"Extract residuals. — residuals.AMMI","text":"Extract residuals fitted AMMI model.","code":""},{"path":"/reference/residuals.AMMI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals. — residuals.AMMI","text":"","code":"# S3 method for AMMI residuals(object, ...)"},{"path":"/reference/residuals.AMMI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals. — residuals.AMMI","text":"object object class AMMI ... used.","code":""},{"path":"/reference/residuals.AMMI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals. — residuals.AMMI","text":"data.frame residuals.","code":""},{"path":[]},{"path":"/reference/residuals.AMMI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residuals. — residuals.AMMI","text":"","code":"## Run AMMI analysis on TDMaize. geAmmi <- gxeAmmi(TD = TDMaize, trait = \"yld\")  ## Extract residuals. residAmmi <- residuals(geAmmi) head(residAmmi) #>   trial genotype   residual #> 1 HN96b     G001 -54.009646 #> 2 HN96b     G002 -20.533206 #> 3 HN96b     G003 -16.946488 #> 4 HN96b     G004  -7.347288 #> 5 HN96b     G005  -2.275921 #> 6 HN96b     G006  97.747967"},{"path":"/reference/residuals.FW.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals. — residuals.FW","title":"Extract residuals. — residuals.FW","text":"Extract residuals fitted Finlay-Wilkinson model.","code":""},{"path":"/reference/residuals.FW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals. — residuals.FW","text":"","code":"# S3 method for FW residuals(object, ...)"},{"path":"/reference/residuals.FW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals. — residuals.FW","text":"object object class FW ... used.","code":""},{"path":"/reference/residuals.FW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals. — residuals.FW","text":"data.frame residuals.","code":""},{"path":[]},{"path":"/reference/residuals.FW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residuals. — residuals.FW","text":"","code":"## Run Finlay-Wilkinson analysis. geFW <- gxeFw(TD = TDMaize, trait = \"yld\")  ## Extract residuals. residFW <- residuals(geFW) head(residFW) #>   trial genotype     residual #> 1 HN96b     G001 -114.9147404 #> 2 HN96b     G002  106.8573585 #> 3 HN96b     G003  -70.5545844 #> 4 HN96b     G004   -0.9377086 #> 5 HN96b     G005   -7.1099130 #> 6 HN96b     G006  110.9616180"},{"path":"/reference/residuals.varCov.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract residuals. — residuals.varCov","title":"Extract residuals. — residuals.varCov","text":"Extract residuals best model.","code":""},{"path":"/reference/residuals.varCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract residuals. — residuals.varCov","text":"","code":"# S3 method for varCov residuals(object, ...)"},{"path":"/reference/residuals.varCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract residuals. — residuals.varCov","text":"object object class varCov ... used.","code":""},{"path":"/reference/residuals.varCov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract residuals. — residuals.varCov","text":"data.frame residuals.","code":""},{"path":[]},{"path":"/reference/residuals.varCov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract residuals. — residuals.varCov","text":"","code":"# \\donttest{ ## Select the best variance-covariance model using asreml for modeling. if (requireNamespace(\"asreml\", quietly = TRUE)) {   geVarCov <- gxeVarCov(TD = TDMaize, trait = \"yld\", engine = \"asreml\")    ## Extract residuals from the model.   residVarCov <- residuals(geVarCov)   head(residVarCov)   } # }"},{"path":"/reference/stability.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 class stability — stability","title":"S3 class stability — stability","text":"Function creating objects S3 class stability.print, summary, plot report methods available.","code":""},{"path":"/reference/stability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 class stability — stability","text":"","code":"createStability(superiority = NULL, static = NULL, wricke = NULL, TD, trait)"},{"path":"/reference/stability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 class stability — stability","text":"superiority data.frame containing values cultivar-superiority measure Lin Binns. static data.frame containing values Shukla's stability variance. wricke data.frame containing values Wricke's ecovalence. trait character string indicating trait analyzed.","code":""},{"path":"/reference/statgenGxE-package.html","id":null,"dir":"Reference","previous_headings":"","what":"statgenGxE: Genotype by Environment (GxE) Analysis — statgenGxE-package","title":"statgenGxE: Genotype by Environment (GxE) Analysis — statgenGxE-package","text":"Analysis multi environment data plant breeding experiments following analyses described Malosetti, Ribaut, van Eeuwijk (2013), doi:10.3389/fphys.2013.00044 . One series statistical genetic packages streamlining analysis typical plant breeding experiments developed Biometris. functions created used conjunction R package 'asreml' 'ASReml' software, can obtained upon purchase 'VSN' international (https://vsni.co.uk/software/asreml-r).","code":""},{"path":[]},{"path":"/reference/statgenGxE-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"statgenGxE: Genotype by Environment (GxE) Analysis — statgenGxE-package","text":"Maintainer: Bart-Jan van Rossum bart-jan.vanrossum@wur.nl contributors: Fred van Eeuwijk (ORCID) [contributor] Martin Boer [contributor] Marcos Malosetti (ORCID) [contributor] Daniela Bustos-Korts (ORCID) [contributor] Emilie J Millet (ORCID) [contributor] Joao Paulo (ORCID) [contributor] Maikel Verouden (ORCID) [contributor] Willem Kruijer (ORCID) [contributor] Ron Wehrens (ORCID) [contributor] Choazhi Zheng (ORCID) [contributor]","code":""},{"path":"/reference/varCov.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 class varCov — varCov","title":"S3 class varCov — varCov","text":"Function creating objects S3 class varCov.print, summary, plot report methods available.","code":""},{"path":"/reference/varCov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 class varCov — varCov","text":"","code":"createVarCov(STA, choice, summary, vcov, criterion, engine, dat, trait)"},{"path":"/reference/varCov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 class varCov — varCov","text":"STA object class STA, best fitted model. choice character string indicating best fitted model. summary data.frame summary fitted models. vcov covariance matrix best fitted model. criterion character string indicating goodness--fit criterion used determinening best model. engine character string containing engine used analysis.","code":""},{"path":"/reference/vc.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract variance components — vc","title":"Extract variance components — vc","text":"Extract variance components object class varComp.","code":""},{"path":"/reference/vc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract variance components — vc","text":"","code":"vc(varComp)"},{"path":"/reference/vc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract variance components — vc","text":"varComp object class varComp.","code":""},{"path":"/reference/vc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract variance components — vc","text":"data.frame variance components standard errors random components fitted model.","code":""},{"path":[]},{"path":"/reference/vc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract variance components — vc","text":"","code":"## Fit a mixed model. geVarComp <- gxeVarComp(TD = TDMaize, trait = \"yld\")  ## Extract variance components. vc(geVarComp) #>           Component #> genotype    6670.93 #> residuals  12446.94"},{"path":"/news/index.html","id":"statgengxe-1041","dir":"Changelog","previous_headings":"","what":"statgenGxE 1.0.4.1","title":"statgenGxE 1.0.4.1","text":"predict function gxeVarComp output extended variables fitted model can now used making predictions. plot functions AMMI GGE analysis now argument rotatePC allowing specification trial aligned positive x-axis plot. gxeVarComp function now argument models allowing subset available models fitted. small bug gxeMegaEnv sometimes caused NA predicted values fixed. minor changes order capitalization outputs.","code":""},{"path":"/news/index.html","id":"statgengxe-104","dir":"Changelog","previous_headings":"","what":"statgenGxE 1.0.4","title":"statgenGxE 1.0.4","text":"CRAN release: 2021-01-07 Finlay-Wilkinson analysis one genotypes observed one trial user friendly warning message now shown. wrong classification one environments data used vignette corrected. degrees freedom anova table GGE analysis corrected. value PC terms lowered one.","code":""},{"path":"/news/index.html","id":"statgengxe-103","dir":"Changelog","previous_headings":"","what":"statgenGxE 1.0.3","title":"statgenGxE 1.0.3","text":"CRAN release: 2020-11-09 user visible changes","code":""},{"path":"/news/index.html","id":"statgengxe-102","dir":"Changelog","previous_headings":"","what":"statgenGxE 1.0.2","title":"statgenGxE 1.0.2","text":"CRAN release: 2020-10-01 Initial CRAN version","code":""}]
